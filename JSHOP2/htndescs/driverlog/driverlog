(define (domain driverlog )
(:requirements :typing)
(:types
	LOCATION LOCATABLE - OBJECT
	DRIVER TRUCK OBJ - LOCATABLE
)
(:predicates
	( AT ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
	( LOCKED-AT ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
	( FLAGGED-AT ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
	( IN ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	( LOCKED-IN ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	( FLAGGED-IN ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	( DRIVING ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	( LOCKED-DRIVING ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	( FLAGGED-DRIVING ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	( LINK ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( LOCKED-LINK ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( FLAGGED-LINK ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( PATH ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( LOCKED-PATH ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( FLAGGED-PATH ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( EMPTY ?TRUCK0 - TRUCK )
	( LOCKED-EMPTY ?TRUCK0 - TRUCK )
	( FLAGGED-EMPTY ?TRUCK0 - TRUCK )
)
(:task IFUNLOCK-AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
)
(:task IFUNLOCK-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
)
(:task IFUNLOCK-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
(:task IFUNLOCK-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
)
(:task DO-AT-LOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:task DO-IN-UNLOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:task DO-AT-BOARD-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:task DO-DRIVING-DISEMBARK-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:task DO-AT-DRIVE-TRUCK2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION ?DRIVER3 - DRIVER )
)
(:task DO-EMPTY-BOARD-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:task DO-DRIVING-DISEMBARK-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:task ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
)
(:task ACHIEVE-AT0
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
)
(:task ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
)
(:task ACHIEVE-IN0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
)
(:task ACHIEVE-AT-DRV
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
)
(:task ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
)
(:task ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
(:task ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
(:task ACHIEVE-AT-TRK
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
)
(:task ACHIEVE-AT2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
)
(:task ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
)
(:task ACHIEVE-EMPTY3
	:parameters ( ?TRUCK0 - TRUCK )
)
(:task ACHIEVE-DRIVING3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
( :method IFUNLOCK-0AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
	:task ( IFUNLOCK-AT ?LOCATABLE0 ?LOCATION1 )
	:precondition  ( FLAGGED-AT ?LOCATABLE0 ?LOCATION1 )
	:ordered-subtasks (and ( i-UNFLAG-AT ?LOCATABLE0 ?LOCATION1 ))
)
( :method IFUNLOCK-1AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
	:task ( IFUNLOCK-AT ?LOCATABLE0 ?LOCATION1 )
	:precondition (not  ( FLAGGED-AT ?LOCATABLE0 ?LOCATION1 ))
	:ordered-subtasks (and ( i-UNLOCK-AT ?LOCATABLE0 ?LOCATION1 ))
)
( :method IFUNLOCK-2IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:task ( IFUNLOCK-IN ?OBJ0 ?TRUCK1 )
	:precondition  ( FLAGGED-IN ?OBJ0 ?TRUCK1 )
	:ordered-subtasks (and ( i-UNFLAG-IN ?OBJ0 ?TRUCK1 ))
)
( :method IFUNLOCK-3IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:task ( IFUNLOCK-IN ?OBJ0 ?TRUCK1 )
	:precondition (not  ( FLAGGED-IN ?OBJ0 ?TRUCK1 ))
	:ordered-subtasks (and ( i-UNLOCK-IN ?OBJ0 ?TRUCK1 ))
)
( :method IFUNLOCK-4DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task ( IFUNLOCK-DRIVING ?DRIVER0 ?TRUCK1 )
	:precondition  ( FLAGGED-DRIVING ?DRIVER0 ?TRUCK1 )
	:ordered-subtasks (and ( i-UNFLAG-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :method IFUNLOCK-5DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task ( IFUNLOCK-DRIVING ?DRIVER0 ?TRUCK1 )
	:precondition (not  ( FLAGGED-DRIVING ?DRIVER0 ?TRUCK1 ))
	:ordered-subtasks (and ( i-UNLOCK-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :method IFUNLOCK-6EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:task ( IFUNLOCK-EMPTY ?TRUCK0 )
	:precondition  ( FLAGGED-EMPTY ?TRUCK0 )
	:ordered-subtasks (and ( i-UNFLAG-EMPTY ?TRUCK0 ))
)
( :method IFUNLOCK-7EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:task ( IFUNLOCK-EMPTY ?TRUCK0 )
	:precondition (not  ( FLAGGED-EMPTY ?TRUCK0 ))
	:ordered-subtasks (and ( i-UNLOCK-EMPTY ?TRUCK0 ))
)
(:method M8-DO-AT-LOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-AT-LOAD-TRUCK0 ?OBJ0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( AT ?OBJ0 ?LOCATION2 ))
	:ordered-subtasks (and  ( ACHIEVE-AT-TRK ?TRUCK1 ?LOCATION2 ) ( IFUNLOCK-AT ?TRUCK1 ?LOCATION2 ) ( LOAD-TRUCK ?OBJ0 ?TRUCK1 ?LOCATION2 ) )
)
(:method M9-DO-IN-UNLOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-IN-UNLOAD-TRUCK0 ?OBJ0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( IN ?OBJ0 ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT-TRK ?TRUCK1 ?LOCATION2 ) ( IFUNLOCK-AT ?TRUCK1 ?LOCATION2 ) ( UNLOAD-TRUCK ?OBJ0 ?TRUCK1 ?LOCATION2 ) )
)
(:method M10-DO-AT-BOARD-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-AT-BOARD-TRUCK1 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( AT ?DRIVER0 ?LOCATION2 ))
	:ordered-subtasks (and  ( IFUNLOCK-EMPTY ?TRUCK1 ) ( IFUNLOCK-AT ?TRUCK1 ?LOCATION2 ) ( BOARD-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
(:method M11-DO-DRIVING-DISEMBARK-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-DRIVING-DISEMBARK-TRUCK1 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT-TRK ?TRUCK1 ?LOCATION2 ) ( IFUNLOCK-AT ?TRUCK1 ?LOCATION2 ) ( DISEMBARK-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
(:method M12-DO-AT-DRIVE-TRUCK2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION ?DRIVER3 - DRIVER )
	:task ( DO-AT-DRIVE-TRUCK2 ?TRUCK0 ?LOCATION1 ?LOCATION2 ?DRIVER3 )
	:precondition (and  ( AT ?TRUCK0 ?LOCATION1 ))
	:ordered-subtasks (and  ( ACHIEVE-DRIVING ?DRIVER3 ?TRUCK0 ) ( IFUNLOCK-DRIVING ?DRIVER3 ?TRUCK0 ) ( DRIVE-TRUCK ?TRUCK0 ?LOCATION1 ?LOCATION2 ?DRIVER3 ) )
)
(:method M13-DO-EMPTY-BOARD-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-EMPTY-BOARD-TRUCK3 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( EMPTY ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT-DRV ?DRIVER0 ?LOCATION2 ) ( IFUNLOCK-AT ?DRIVER0 ?LOCATION2 ) ( BOARD-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
(:method M14-DO-DRIVING-DISEMBARK-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-DRIVING-DISEMBARK-TRUCK3 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT-TRK ?TRUCK1 ?LOCATION2 ) ( IFUNLOCK-AT ?TRUCK1 ?LOCATION2 ) ( DISEMBARK-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
( :method M15-ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT ?OBJ0 ?LOCATION1 )
	:precondition  ( LOCKED-AT ?OBJ0 ?LOCATION1 )
	:ordered-subtasks (and  ( i-FLAG-AT ?OBJ0 ?LOCATION1 ))
)
( :method M16-ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT ?OBJ0 ?LOCATION1 )
	:precondition (and ( AT ?OBJ0 ?LOCATION1 ) ( not ( LOCKED-AT ?OBJ0 ?LOCATION1 )) )
	:ordered-subtasks (and  ( i-LOCK-AT ?OBJ0 ?LOCATION1 ))
)
( :method M17-ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT ?OBJ0 ?LOCATION1 )
	:precondition (and ( not ( LOCKED-AT ?OBJ0 ?LOCATION1 )) ( not ( AT ?OBJ0 ?LOCATION1 )) )
	:ordered-subtasks (and ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 ) ( i-LOCK-AT ?OBJ0 ?LOCATION1 ))
)
( :method M18-ACHIEVE-AT0
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:task ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
	:precondition  ( AT ?OBJ0 ?LOCATION1 )
	:subtasks ( )
)
( :method M19-ACHIEVE-AT0
	:parameters ( ?LOCATION1 - LOCATION ?LOCATION3 - LOCATION ?OBJ0 - OBJ ?TRUCK5 - TRUCK)
	:task  ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
	:precondition (and ( not ( AT ?OBJ0 ?LOCATION1 ) ) ( AT ?OBJ0 ?LOCATION3 ) )
	:ordered-subtasks (and  ( DO-AT-LOAD-TRUCK0 ?OBJ0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 ) )
)
( :method M20-ACHIEVE-AT0
	:parameters ( ?LOCATION1 - LOCATION ?LOCATION6 - LOCATION ?OBJ0 - OBJ ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
	:precondition (and ( not ( AT ?OBJ0 ?LOCATION1 ) ) ( IN ?OBJ0 ?TRUCK3 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD-TRUCK0 ?OBJ0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 ) )
)
( :method M21-ACHIEVE-IN0
	:parameters ( ?LOCATION3 - LOCATION ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?TRUCK5 - TRUCK)
	:task ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
	:precondition (and ( not ( IN ?OBJ0 ?TRUCK1 ) ) ( AT ?OBJ0 ?LOCATION3 ) )
	:ordered-subtasks (and  ( DO-AT-LOAD-TRUCK0 ?OBJ0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 ) )
)
( :method M22-ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?OBJ0 ?TRUCK1 )
	:precondition  ( LOCKED-IN ?OBJ0 ?TRUCK1 )
	:ordered-subtasks (and  ( i-FLAG-IN ?OBJ0 ?TRUCK1 ))
)
( :method M23-ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?OBJ0 ?TRUCK1 )
	:precondition (and ( IN ?OBJ0 ?TRUCK1 ) ( not ( LOCKED-IN ?OBJ0 ?TRUCK1 )) )
	:ordered-subtasks (and  ( i-LOCK-IN ?OBJ0 ?TRUCK1 ))
)
( :method M24-ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?OBJ0 ?TRUCK1 )
	:precondition (and ( not ( LOCKED-IN ?OBJ0 ?TRUCK1 )) ( not ( IN ?OBJ0 ?TRUCK1 )) )
	:ordered-subtasks (and ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 ) ( i-LOCK-IN ?OBJ0 ?TRUCK1 ))
)
( :method M25-ACHIEVE-IN0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:task ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
	:precondition  ( IN ?OBJ0 ?TRUCK1 )
	:subtasks ( )
)
( :method M26-ACHIEVE-IN0
	:parameters ( ?LOCATION6 - LOCATION ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
	:precondition (and ( not ( IN ?OBJ0 ?TRUCK1 ) ) ( IN ?OBJ0 ?TRUCK3 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD-TRUCK0 ?OBJ0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 ) )
)
( :method M27-ACHIEVE-AT
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT-DRV ?DRIVER0 ?LOCATION1 )
	:precondition  ( LOCKED-AT ?DRIVER0 ?LOCATION1 )
	:ordered-subtasks (and  ( i-FLAG-AT ?DRIVER0 ?LOCATION1 ))
)
( :method M28-ACHIEVE-AT
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT-DRV ?DRIVER0 ?LOCATION1 )
	:precondition (and ( AT ?DRIVER0 ?LOCATION1 ) ( not ( LOCKED-AT ?DRIVER0 ?LOCATION1 )) )
	:ordered-subtasks (and  ( i-LOCK-AT ?DRIVER0 ?LOCATION1 ))
)
( :method M29-ACHIEVE-AT
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT-DRV ?DRIVER0 ?LOCATION1 )
	:precondition (and ( not ( LOCKED-AT ?DRIVER0 ?LOCATION1 )) ( not ( AT ?DRIVER0 ?LOCATION1 )) )
	:ordered-subtasks (and ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) ( i-LOCK-AT ?DRIVER0 ?LOCATION1 ))
)
( :method M30-ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:task ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
	:precondition  ( AT ?DRIVER0 ?LOCATION1 )
	:subtasks ( )
)
( :method M31-ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION ?LOCATION3 - LOCATION ?LOCATION6 - LOCATION)
	:task  ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
	:precondition (and ( not ( AT ?DRIVER0 ?LOCATION1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) ( PATH ?LOCATION3 ?LOCATION6 ) )
	:ordered-subtasks (and  ( WALK ?DRIVER0 ?LOCATION3 ?LOCATION6 ) ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) )
)
( :method M32-ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION ?LOCATION3 - LOCATION ?TRUCK5 - TRUCK)
	:task  ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
	:precondition (and ( not ( AT ?DRIVER0 ?LOCATION1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) )
	:ordered-subtasks (and  ( DO-AT-BOARD-TRUCK1 ?DRIVER0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) )
)
( :method M33-ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION ?LOCATION6 - LOCATION ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
	:precondition (and ( not ( AT ?DRIVER0 ?LOCATION1 ) ) ( DRIVING ?DRIVER0 ?TRUCK3 ) )
	:ordered-subtasks (and  ( DO-DRIVING-DISEMBARK-TRUCK1 ?DRIVER0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) )
)
( :method M34-ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION3 - LOCATION ?LOCATION6 - LOCATION ?TRUCK1 - TRUCK)
	:task ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) ( PATH ?LOCATION3 ?LOCATION6 ) )
	:ordered-subtasks (and  ( WALK ?DRIVER0 ?LOCATION3 ?LOCATION6 ) ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) )
)
( :method M35-ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION3 - LOCATION ?TRUCK1 - TRUCK ?TRUCK5 - TRUCK)
	:task ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) )
	:ordered-subtasks (and  ( DO-AT-BOARD-TRUCK1 ?DRIVER0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) )
)
( :method M36-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:precondition  ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 )
	:ordered-subtasks (and  ( i-FLAG-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :method M37-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:precondition (and ( DRIVING ?DRIVER0 ?TRUCK1 ) ( not ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 )) )
	:ordered-subtasks (and  ( i-LOCK-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :method M38-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 )) ( not ( DRIVING ?DRIVER0 ?TRUCK1 )) )
	:ordered-subtasks (and ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) ( i-LOCK-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :method M39-ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
	:precondition  ( DRIVING ?DRIVER0 ?TRUCK1 )
	:subtasks ( )
)
( :method M40-ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION6 - LOCATION ?TRUCK1 - TRUCK ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( DRIVING ?DRIVER0 ?TRUCK3 ) )
	:ordered-subtasks (and  ( DO-DRIVING-DISEMBARK-TRUCK1 ?DRIVER0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) )
)
( :method M41-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT-TRK ?TRUCK0 ?LOCATION1 )
	:precondition  ( LOCKED-AT ?TRUCK0 ?LOCATION1 )
	:ordered-subtasks (and  ( i-FLAG-AT ?TRUCK0 ?LOCATION1 ))
)
( :method M42-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT-TRK ?TRUCK0 ?LOCATION1 )
	:precondition (and ( AT ?TRUCK0 ?LOCATION1 ) ( not ( LOCKED-AT ?TRUCK0 ?LOCATION1 )) )
	:ordered-subtasks (and  ( i-LOCK-AT ?TRUCK0 ?LOCATION1 ))
)
( :method M43-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:task  ( ACHIEVE-AT-TRK ?TRUCK0 ?LOCATION1 )
	:precondition (and ( not ( LOCKED-AT ?TRUCK0 ?LOCATION1 )) ( not ( AT ?TRUCK0 ?LOCATION1 )) )
	:ordered-subtasks (and ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 ) ( i-LOCK-AT ?TRUCK0 ?LOCATION1 ))
)
( :method M44-ACHIEVE-AT2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:task ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 )
	:precondition  ( AT ?TRUCK0 ?LOCATION1 )
	:subtasks ( )
)
( :method M45-ACHIEVE-AT2
	:parameters ( ?DRIVER7 - DRIVER ?LOCATION1 - LOCATION ?LOCATION3 - LOCATION ?LOCATION6 - LOCATION ?TRUCK0 - TRUCK)
	:task  ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 )
	:precondition (and ( not ( AT ?TRUCK0 ?LOCATION1 ) ) ( AT ?TRUCK0 ?LOCATION3 ) ( LINK ?LOCATION3 ?LOCATION6 ) )
	:ordered-subtasks (and  ( DO-AT-DRIVE-TRUCK2 ?TRUCK0 ?LOCATION3 ?LOCATION6 ?DRIVER7 ) ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 ) )
)
( :method M46-ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:task  ( ACHIEVE-EMPTY ?TRUCK0 )
	:precondition  ( LOCKED-EMPTY ?TRUCK0 )
	:ordered-subtasks (and  ( i-FLAG-EMPTY ?TRUCK0 ))
)
( :method M47-ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:task  ( ACHIEVE-EMPTY ?TRUCK0 )
	:precondition (and ( EMPTY ?TRUCK0 ) ( not ( LOCKED-EMPTY ?TRUCK0 )) )
	:ordered-subtasks (and  ( i-LOCK-EMPTY ?TRUCK0 ))
)
( :method M48-ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:task  ( ACHIEVE-EMPTY ?TRUCK0 )
	:precondition (and ( not ( LOCKED-EMPTY ?TRUCK0 )) ( not ( EMPTY ?TRUCK0 )) )
	:ordered-subtasks (and ( ACHIEVE-EMPTY3 ?TRUCK0 ) ( i-LOCK-EMPTY ?TRUCK0 ))
)
( :method M49-ACHIEVE-EMPTY3
	:parameters ( ?TRUCK0 - TRUCK )
	:task ( ACHIEVE-EMPTY3 ?TRUCK0 )
	:precondition  ( EMPTY ?TRUCK0 )
	:subtasks ( )
)
( :method M50-ACHIEVE-EMPTY3
	:parameters ( ?DRIVER1 - DRIVER ?LOCATION5 - LOCATION ?TRUCK0 - TRUCK)
	:task  ( ACHIEVE-EMPTY3 ?TRUCK0 )
	:precondition (and ( not ( EMPTY ?TRUCK0 ) ) ( DRIVING ?DRIVER1 ?TRUCK0 ) )
	:ordered-subtasks (and  ( DO-DRIVING-DISEMBARK-TRUCK3 ?DRIVER1 ?TRUCK0 ?LOCATION5 ) ( ACHIEVE-EMPTY3 ?TRUCK0 ) )
)
( :method M51-ACHIEVE-DRIVING3
	:parameters ( ?DRIVER0 - DRIVER ?DRIVER3 - DRIVER ?LOCATION5 - LOCATION ?TRUCK1 - TRUCK)
	:task ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( EMPTY ?TRUCK1 ) ( AT ?TRUCK1 ?LOCATION5 ) )
	:ordered-subtasks (and  ( DO-EMPTY-BOARD-TRUCK3 ?DRIVER3 ?TRUCK1 ?LOCATION5 ) ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 ) )
)
( :method M52-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 )) ( not ( DRIVING ?DRIVER0 ?TRUCK1 )) )
	:ordered-subtasks (and ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 ) ( i-LOCK-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :method M53-ACHIEVE-DRIVING3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:task ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
	:precondition  ( DRIVING ?DRIVER0 ?TRUCK1 )
	:subtasks ( )
)
( :method M54-ACHIEVE-DRIVING3
	:parameters ( ?DRIVER0 - DRIVER ?DRIVER2 - DRIVER ?LOCATION6 - LOCATION ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
	:precondition (and ( not ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( DRIVING ?DRIVER2 ?TRUCK1 ) )
	:ordered-subtasks (and  ( DO-DRIVING-DISEMBARK-TRUCK3 ?DRIVER2 ?TRUCK1 ?LOCATION6 ) ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 ) )
)
( :action LOAD-TRUCK
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( AT ?OBJ0 ?LOCATION2 ) ( not ( LOCKED-AT ?OBJ0 ?LOCATION2 ) ))
	:effect (and
		 ( not ( AT ?OBJ0 ?LOCATION2 ) ) ( IN ?OBJ0 ?TRUCK1 ))
)
( :action UNLOAD-TRUCK
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( IN ?OBJ0 ?TRUCK1 ) ( not ( LOCKED-IN ?OBJ0 ?TRUCK1 ) ))
	:effect (and
		 ( not ( IN ?OBJ0 ?TRUCK1 ) ) ( AT ?OBJ0 ?LOCATION2 ))
)
( :action BOARD-TRUCK
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( AT ?DRIVER0 ?LOCATION2 ) ( EMPTY ?TRUCK1 ) ( not ( LOCKED-AT ?DRIVER0 ?LOCATION2 ) ) ( not ( LOCKED-EMPTY ?TRUCK1 ) ))
	:effect (and
		 ( not ( AT ?DRIVER0 ?LOCATION2 ) ) ( not ( EMPTY ?TRUCK1 ) ) ( DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :action DISEMBARK-TRUCK
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( DRIVING ?DRIVER0 ?TRUCK1 ) ( not ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 ) ))
	:effect (and
		 ( not ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( AT ?DRIVER0 ?LOCATION2 ) ( EMPTY ?TRUCK1 ))
)
( :action DRIVE-TRUCK
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION ?DRIVER3 - DRIVER)
	:precondition (and
		 ( AT ?TRUCK0 ?LOCATION1 ) ( DRIVING ?DRIVER3 ?TRUCK0 ) ( LINK ?LOCATION1 ?LOCATION2 ) ( not ( LOCKED-AT ?TRUCK0 ?LOCATION1 ) ))
	:effect (and
		 ( not ( AT ?TRUCK0 ?LOCATION1 ) ) ( AT ?TRUCK0 ?LOCATION2 ))
)
( :action WALK
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?DRIVER0 ?LOCATION1 ) ( PATH ?LOCATION1 ?LOCATION2 ) ( not ( LOCKED-AT ?DRIVER0 ?LOCATION1 ) ))
	:effect (and
		 ( not ( AT ?DRIVER0 ?LOCATION1 ) ) ( AT ?DRIVER0 ?LOCATION2 ))
)
( :action i-LOCK-AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION)
	:precondition ( )
	:effect (and
		 ( LOCKED-AT ?LOCATABLE0 ?LOCATION1 ))
)
( :action i-UNLOCK-AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION)
	:precondition ( )
	:effect (and
		 ( not ( LOCKED-AT ?LOCATABLE0 ?LOCATION1 ) ))
)
( :action i-FLAG-AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION)
	:precondition ( )
	:effect (and
		 ( FLAGGED-AT ?LOCATABLE0 ?LOCATION1 ))
)
( :action i-UNFLAG-AT
	:parameters ( ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION)
	:precondition ( )
	:effect (and
		 ( not ( FLAGGED-AT ?LOCATABLE0 ?LOCATION1 ) ))
)
( :action i-LOCK-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( LOCKED-IN ?OBJ0 ?TRUCK1 ))
)
( :action i-UNLOCK-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( not ( LOCKED-IN ?OBJ0 ?TRUCK1 ) ))
)
( :action i-FLAG-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( FLAGGED-IN ?OBJ0 ?TRUCK1 ))
)
( :action i-UNFLAG-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( not ( FLAGGED-IN ?OBJ0 ?TRUCK1 ) ))
)
( :action i-LOCK-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :action i-UNLOCK-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( not ( LOCKED-DRIVING ?DRIVER0 ?TRUCK1 ) ))
)
( :action i-FLAG-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( FLAGGED-DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :action i-UNFLAG-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK)
	:precondition ( )
	:effect (and
		 ( not ( FLAGGED-DRIVING ?DRIVER0 ?TRUCK1 ) ))
)
( :action i-LOCK-EMPTY
	:parameters ( ?TRUCK0 - TRUCK)
	:precondition ( )
	:effect (and
		 ( LOCKED-EMPTY ?TRUCK0 ))
)
( :action i-UNLOCK-EMPTY
	:parameters ( ?TRUCK0 - TRUCK)
	:precondition ( )
	:effect (and
		 ( not ( LOCKED-EMPTY ?TRUCK0 ) ))
)
( :action i-FLAG-EMPTY
	:parameters ( ?TRUCK0 - TRUCK)
	:precondition ( )
	:effect (and
		 ( FLAGGED-EMPTY ?TRUCK0 ))
)
( :action i-UNFLAG-EMPTY
	:parameters ( ?TRUCK0 - TRUCK)
	:precondition ( )
	:effect (and
		 ( not ( FLAGGED-EMPTY ?TRUCK0 ) ))
)
)
