(define (domain driverlog
(:requirements :typing)
(:types
	LOCATION LOCATABLE - OBJECT
	DRIVER TRUCK OBJ - LOCATABLE
)
(:predicates
	( AT ?LOCATABLE0 - LOCATABLE ?LOCATION1 - LOCATION )
	( IN ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	( DRIVING ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	( LINK ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( PATH ?LOCATION0 - LOCATION ?LOCATION1 - LOCATION )
	( EMPTY ?TRUCK0 - TRUCK )
)
( :action !LOAD-TRUCK
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( AT ?OBJ0 ?LOCATION2 ))
	:effect (and
		 ( NOT ( AT ?OBJ0 ?LOCATION2 ) ) ( IN ?OBJ0 ?TRUCK1 ))
)
( :action !UNLOAD-TRUCK
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( IN ?OBJ0 ?TRUCK1 ))
	:effect (and
		 ( NOT ( IN ?OBJ0 ?TRUCK1 ) ) ( AT ?OBJ0 ?LOCATION2 ))
)
( :action !BOARD-TRUCK
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( AT ?DRIVER0 ?LOCATION2 ) ( EMPTY ?TRUCK1 ))
	:effect (and
		 ( NOT ( AT ?DRIVER0 ?LOCATION2 ) ) ( NOT ( EMPTY ?TRUCK1 ) ) ( DRIVING ?DRIVER0 ?TRUCK1 ))
)
( :action !DISEMBARK-TRUCK
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?TRUCK1 ?LOCATION2 ) ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:effect (and
		 ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( AT ?DRIVER0 ?LOCATION2 ) ( EMPTY ?TRUCK1 ))
)
( :action !DRIVE-TRUCK
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION ?DRIVER3 - DRIVER)
	:precondition (and
		 ( AT ?TRUCK0 ?LOCATION1 ) ( DRIVING ?DRIVER3 ?TRUCK0 ) ( LINK ?LOCATION1 ?LOCATION2 ))
	:effect (and
		 ( NOT ( AT ?TRUCK0 ?LOCATION1 ) ) ( AT ?TRUCK0 ?LOCATION2 ))
)
( :action !WALK
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION)
	:precondition (and
		 ( AT ?DRIVER0 ?LOCATION1 ) ( PATH ?LOCATION1 ?LOCATION2 ))
	:effect (and
		 ( NOT ( AT ?DRIVER0 ?LOCATION1 ) ) ( AT ?DRIVER0 ?LOCATION2 ))
)
(:task DO-AT-LOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:method M-DO-AT-LOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-AT-LOAD-TRUCK0 ?OBJ0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( AT ?OBJ0 ?LOCATION2 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK1 ?LOCATION2 ) ( !LOAD-TRUCK ?OBJ0 ?TRUCK1 ?LOCATION2 ) )
)
(:task DO-IN-UNLOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:method M-DO-IN-UNLOAD-TRUCK0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-IN-UNLOAD-TRUCK0 ?OBJ0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( IN ?OBJ0 ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK1 ?LOCATION2 ) ( !UNLOAD-TRUCK ?OBJ0 ?TRUCK1 ?LOCATION2 ) )
)
(:task DO-AT-BOARD-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:method M-DO-AT-BOARD-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-AT-BOARD-TRUCK1 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( AT ?DRIVER0 ?LOCATION2 ))
	:ordered-subtasks (and  ( !BOARD-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
(:task DO-DRIVING-DISEMBARK-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:method M-DO-DRIVING-DISEMBARK-TRUCK1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-DRIVING-DISEMBARK-TRUCK1 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK1 ?LOCATION2 ) ( !DISEMBARK-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
(:task DO-AT-DRIVE-TRUCK2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION ?DRIVER3 - DRIVER )
)
(:method M-DO-AT-DRIVE-TRUCK2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION ?LOCATION2 - LOCATION ?DRIVER3 - DRIVER )
	:task ( DO-AT-DRIVE-TRUCK2 ?TRUCK0 ?LOCATION1 ?LOCATION2 ?DRIVER3 )
	:precondition (and  ( AT ?TRUCK0 ?LOCATION1 ))
	:ordered-subtasks (and  ( ACHIEVE-DRIVING ?DRIVER3 ?TRUCK0 ) ( !DRIVE-TRUCK ?TRUCK0 ?LOCATION1 ?LOCATION2 ?DRIVER3 ) )
)
(:task DO-EMPTY-BOARD-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:method M-DO-EMPTY-BOARD-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-EMPTY-BOARD-TRUCK3 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( EMPTY ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?DRIVER0 ?LOCATION2 ) ( !BOARD-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
(:task DO-DRIVING-DISEMBARK-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
)
(:method M-DO-DRIVING-DISEMBARK-TRUCK3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK ?LOCATION2 - LOCATION )
	:task ( DO-DRIVING-DISEMBARK-TRUCK3 ?DRIVER0 ?TRUCK1 ?LOCATION2 )
	:precondition (and  ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK1 ?LOCATION2 ) ( !DISEMBARK-TRUCK ?DRIVER0 ?TRUCK1 ?LOCATION2 ) )
)
( :task ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
)
( :method M-ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:precondition (and ( AT ?OBJ0 ?LOCATION1 ))
	:task  ( ACHIEVE-AT ?OBJ0 ?LOCATION1 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-AT
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:precondition ( NOT ( AT ?OBJ0 ?LOCATION1 ))
	:task  ( ACHIEVE-AT ?OBJ0 ?LOCATION1 )
	:subtasks  ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
)
( :task ACHIEVE-AT0
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
)
( :method M-ACHIEVE-AT0
	:parameters ( ?OBJ0 - OBJ ?LOCATION1 - LOCATION )
	:precondition  ( AT ?OBJ0 ?LOCATION1 )
	:task ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
	:subtasks ( )
)
    ( :FIKO ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
              ( ( NOT ( AT ?OBJ0 ?LOCATION1 ) ) ( AT ?OBJ0 ?LOCATION3 ) ( OBJ ?OBJ0 ) ( TRUCK ?TRUCK5 ) ( LOCATION ?LOCATION3 ) )
              ( ( DO-AT-LOAD-TRUCK0 ?OBJ0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 ) )
    )
    ( :FIKO ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 )
              ( ( NOT ( AT ?OBJ0 ?LOCATION1 ) ) ( IN ?OBJ0 ?TRUCK3 ) ( OBJ ?OBJ0 ) ( TRUCK ?TRUCK3 ) ( LOCATION ?LOCATION6 ) )
              ( ( DO-IN-UNLOAD-TRUCK0 ?OBJ0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-AT0 ?OBJ0 ?LOCATION1 ) )
    )
    ( :FIKO ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
              ( ( NOT ( IN ?OBJ0 ?TRUCK1 ) ) ( AT ?OBJ0 ?LOCATION3 ) ( OBJ ?OBJ0 ) ( TRUCK ?TRUCK5 ) ( LOCATION ?LOCATION3 ) )
              ( ( DO-AT-LOAD-TRUCK0 ?OBJ0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 ) )
    )
( :task ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:precondition (and ( IN ?OBJ0 ?TRUCK1 ))
	:task  ( ACHIEVE-IN ?OBJ0 ?TRUCK1 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-IN
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:precondition ( NOT ( IN ?OBJ0 ?TRUCK1 ))
	:task  ( ACHIEVE-IN ?OBJ0 ?TRUCK1 )
	:subtasks  ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
)
( :task ACHIEVE-IN0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-IN0
	:parameters ( ?OBJ0 - OBJ ?TRUCK1 - TRUCK )
	:precondition  ( IN ?OBJ0 ?TRUCK1 )
	:task ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
	:subtasks ( )
)
    ( :FIKO ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 )
              ( ( NOT ( IN ?OBJ0 ?TRUCK1 ) ) ( IN ?OBJ0 ?TRUCK3 ) ( OBJ ?OBJ0 ) ( TRUCK ?TRUCK3 ) ( LOCATION ?LOCATION6 ) )
              ( ( DO-IN-UNLOAD-TRUCK0 ?OBJ0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-IN0 ?OBJ0 ?TRUCK1 ) )
    )
( :task ACHIEVE-AT
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
)
( :method M-ACHIEVE-AT
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:precondition (and ( AT ?DRIVER0 ?LOCATION1 ))
	:task  ( ACHIEVE-AT ?DRIVER0 ?LOCATION1 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-AT
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:precondition ( NOT ( AT ?DRIVER0 ?LOCATION1 ))
	:task  ( ACHIEVE-AT ?DRIVER0 ?LOCATION1 )
	:subtasks  ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
)
( :task ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
)
( :method M-ACHIEVE-AT1
	:parameters ( ?DRIVER0 - DRIVER ?LOCATION1 - LOCATION )
	:precondition  ( AT ?DRIVER0 ?LOCATION1 )
	:task ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
	:subtasks ( )
)
    ( :FIKO ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
              ( ( NOT ( AT ?DRIVER0 ?LOCATION1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) ( PATH ?LOCATION3 ?LOCATION6 ) ( DRIVER ?DRIVER0 ) ( LOCATION ?LOCATION3 ) ( LOCATION ?LOCATION6 ) )
              ( ( !WALK ?DRIVER0 ?LOCATION3 ?LOCATION6 ) ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) )
    )
    ( :FIKO ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
              ( ( NOT ( AT ?DRIVER0 ?LOCATION1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) ( DRIVER ?DRIVER0 ) ( TRUCK ?TRUCK5 ) ( LOCATION ?LOCATION3 ) )
              ( ( DO-AT-BOARD-TRUCK1 ?DRIVER0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) )
    )
    ( :FIKO ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 )
              ( ( NOT ( AT ?DRIVER0 ?LOCATION1 ) ) ( DRIVING ?DRIVER0 ?TRUCK3 ) ( DRIVER ?DRIVER0 ) ( TRUCK ?TRUCK3 ) ( LOCATION ?LOCATION6 ) )
              ( ( DO-DRIVING-DISEMBARK-TRUCK1 ?DRIVER0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-AT1 ?DRIVER0 ?LOCATION1 ) )
    )
    ( :FIKO ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
              ( ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) ( PATH ?LOCATION3 ?LOCATION6 ) ( DRIVER ?DRIVER0 ) ( LOCATION ?LOCATION3 ) ( LOCATION ?LOCATION6 ) )
              ( ( !WALK ?DRIVER0 ?LOCATION3 ?LOCATION6 ) ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) )
    )
    ( :FIKO ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
              ( ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( AT ?DRIVER0 ?LOCATION3 ) ( DRIVER ?DRIVER0 ) ( TRUCK ?TRUCK5 ) ( LOCATION ?LOCATION3 ) )
              ( ( DO-AT-BOARD-TRUCK1 ?DRIVER0 ?TRUCK5 ?LOCATION3 ) ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) )
    )
( :task ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:precondition (and ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:precondition ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:subtasks  ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
)
( :task ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-DRIVING1
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:precondition  ( DRIVING ?DRIVER0 ?TRUCK1 )
	:task ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
	:subtasks ( )
)
    ( :FIKO ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 )
              ( ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( DRIVING ?DRIVER0 ?TRUCK3 ) ( DRIVER ?DRIVER0 ) ( TRUCK ?TRUCK3 ) ( LOCATION ?LOCATION6 ) )
              ( ( DO-DRIVING-DISEMBARK-TRUCK1 ?DRIVER0 ?TRUCK3 ?LOCATION6 ) ( ACHIEVE-DRIVING1 ?DRIVER0 ?TRUCK1 ) )
    )
( :task ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
)
( :method M-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:precondition (and ( AT ?TRUCK0 ?LOCATION1 ))
	:task  ( ACHIEVE-AT ?TRUCK0 ?LOCATION1 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:precondition ( NOT ( AT ?TRUCK0 ?LOCATION1 ))
	:task  ( ACHIEVE-AT ?TRUCK0 ?LOCATION1 )
	:subtasks  ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 )
)
( :task ACHIEVE-AT2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
)
( :method M-ACHIEVE-AT2
	:parameters ( ?TRUCK0 - TRUCK ?LOCATION1 - LOCATION )
	:precondition  ( AT ?TRUCK0 ?LOCATION1 )
	:task ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 )
	:subtasks ( )
)
    ( :FIKO ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 )
              ( ( NOT ( AT ?TRUCK0 ?LOCATION1 ) ) ( AT ?TRUCK0 ?LOCATION3 ) ( LINK ?LOCATION3 ?LOCATION6 ) ( TRUCK ?TRUCK0 ) ( LOCATION ?LOCATION3 ) ( LOCATION ?LOCATION6 ) ( DRIVER ?DRIVER7 ) )
              ( ( DO-AT-DRIVE-TRUCK2 ?TRUCK0 ?LOCATION3 ?LOCATION6 ?DRIVER7 ) ( ACHIEVE-AT2 ?TRUCK0 ?LOCATION1 ) )
    )
( :task ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
)
( :method M-ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:precondition (and ( EMPTY ?TRUCK0 ))
	:task  ( ACHIEVE-EMPTY ?TRUCK0 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-EMPTY
	:parameters ( ?TRUCK0 - TRUCK )
	:precondition ( NOT ( EMPTY ?TRUCK0 ))
	:task  ( ACHIEVE-EMPTY ?TRUCK0 )
	:subtasks  ( ACHIEVE-EMPTY3 ?TRUCK0 )
)
( :task ACHIEVE-EMPTY3
	:parameters ( ?TRUCK0 - TRUCK )
)
( :method M-ACHIEVE-EMPTY3
	:parameters ( ?TRUCK0 - TRUCK )
	:precondition  ( EMPTY ?TRUCK0 )
	:task ( ACHIEVE-EMPTY3 ?TRUCK0 )
	:subtasks ( )
)
    ( :DALO ( ACHIEVE-EMPTY3 ?TRUCK0 )
              ( ( NOT ( EMPTY ?TRUCK0 ) ) ( DRIVING ?DRIVER1 ?TRUCK0 ) ( DRIVER ?DRIVER1 ) ( TRUCK ?TRUCK0 ) ( LOCATION ?LOCATION5 ) )
              ( ( DO-DRIVING-DISEMBARK-TRUCK3 ?DRIVER1 ?TRUCK0 ?LOCATION5 ) ( ACHIEVE-EMPTY3 ?TRUCK0 ) )
    )
    ( :FIKO ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
              ( ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( EMPTY ?TRUCK1 ) ( AT ?TRUCK1 ?LOCATION5 ) ( DRIVER ?DRIVER3 ) ( TRUCK ?TRUCK1 ) ( LOCATION ?LOCATION5 ) )
              ( ( DO-EMPTY-BOARD-TRUCK3 ?DRIVER3 ?TRUCK1 ?LOCATION5 ) ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 ) )
    )
( :method M-ACHIEVE-DRIVING
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:precondition ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ))
	:task  ( ACHIEVE-DRIVING ?DRIVER0 ?TRUCK1 )
	:subtasks  ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
)
( :task ACHIEVE-DRIVING3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-DRIVING3
	:parameters ( ?DRIVER0 - DRIVER ?TRUCK1 - TRUCK )
	:precondition  ( DRIVING ?DRIVER0 ?TRUCK1 )
	:task ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
	:subtasks ( )
)
    ( :FIKO ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 )
              ( ( NOT ( DRIVING ?DRIVER0 ?TRUCK1 ) ) ( DRIVING ?DRIVER2 ?TRUCK1 ) ( DRIVER ?DRIVER2 ) ( TRUCK ?TRUCK1 ) ( LOCATION ?LOCATION6 ) )
              ( ( DO-DRIVING-DISEMBARK-TRUCK3 ?DRIVER2 ?TRUCK1 ?LOCATION6 ) ( ACHIEVE-DRIVING3 ?DRIVER0 ?TRUCK1 ) )
    )
))
