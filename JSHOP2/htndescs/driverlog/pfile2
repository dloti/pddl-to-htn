(define (problem p)
(:domain driverlog)
(:objects
	S0 - LOCATION
	S1 - LOCATION
	S2 - LOCATION
	P0-1 - LOCATION
	P0-2 - LOCATION
	P1-0 - LOCATION
	P2-1 - LOCATION
	DRIVER1 - LOCATABLE
	DRIVER2 - LOCATABLE
	TRUCK1 - LOCATABLE
	TRUCK2 - LOCATABLE
	PACKAGE1 - LOCATABLE
	PACKAGE2 - LOCATABLE
	PACKAGE3 - LOCATABLE
	DRIVER1 - OBJECT
	DRIVER2 - OBJECT
	TRUCK1 - OBJECT
	TRUCK2 - OBJECT
	PACKAGE1 - OBJECT
	PACKAGE2 - OBJECT
	PACKAGE3 - OBJECT
	S0 - OBJECT
	S1 - OBJECT
	S2 - OBJECT
	P0-1 - OBJECT
	P0-2 - OBJECT
	P1-0 - OBJECT
	P2-1 - OBJECT
	DRIVER1 - DRIVER
	DRIVER2 - DRIVER
	TRUCK1 - TRUCK
	TRUCK2 - TRUCK
	PACKAGE1 - OBJ
	PACKAGE2 - OBJ
	PACKAGE3 - OBJ
)
(:htn
	:tasks (and
	(ACHIEVE-AT DRIVER1 S1)
	(ACHIEVE-AT DRIVER2 S1)
	(ACHIEVE-AT TRUCK1 S2)
	(ACHIEVE-AT TRUCK2 S0)
	(ACHIEVE-AT PACKAGE1 S0)
	(ACHIEVE-AT PACKAGE2 S2)
	(ACHIEVE-AT PACKAGE3 S0)
	)
:ordering ( )
:constraints ( )
)
(:init
        (AT DRIVER1 S0)
        (AT DRIVER2 S0)
        (AT TRUCK1 S0)
        (EMPTY TRUCK1)
        (AT TRUCK2 S1)
        (EMPTY TRUCK2)
        (AT PACKAGE1 S2)
        (AT PACKAGE2 S1)
        (AT PACKAGE3 S1)
        (PATH S0 P0-1)
        (PATH P0-1 S0)
        (PATH S1 P0-1)
        (PATH P0-1 S1)
        (PATH S0 P0-2)
        (PATH P0-2 S0)
        (PATH S2 P0-2)
        (PATH P0-2 S2)
        (PATH S2 P2-1)
        (PATH P2-1 S2)
        (PATH S1 P2-1)
        (PATH P2-1 S1)
        (LINK S0 S2)
        (LINK S2 S0)
        (LINK S1 S0)
        (LINK S0 S1)
        (LINK S1 S2)
        (LINK S2 S1)
)
)

