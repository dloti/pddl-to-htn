(define (problem p)
(:domain depots)
(:objects
	DEPOT0 - PLACE
	DISTRIBUTOR0 - PLACE
	DISTRIBUTOR1 - PLACE
	TRUCK0 - LOCATABLE
	TRUCK1 - LOCATABLE
	PALLET0 - LOCATABLE
	PALLET1 - LOCATABLE
	PALLET2 - LOCATABLE
	PALLET3 - LOCATABLE
	PALLET4 - LOCATABLE
	PALLET5 - LOCATABLE
	CRATE0 - LOCATABLE
	CRATE1 - LOCATABLE
	CRATE2 - LOCATABLE
	CRATE3 - LOCATABLE
	CRATE4 - LOCATABLE
	CRATE5 - LOCATABLE
	CRATE6 - LOCATABLE
	CRATE7 - LOCATABLE
	CRATE8 - LOCATABLE
	CRATE9 - LOCATABLE
	HOIST0 - LOCATABLE
	HOIST1 - LOCATABLE
	HOIST2 - LOCATABLE
	DEPOT0 - OBJECT
	DISTRIBUTOR0 - OBJECT
	DISTRIBUTOR1 - OBJECT
	TRUCK0 - OBJECT
	TRUCK1 - OBJECT
	PALLET0 - OBJECT
	PALLET1 - OBJECT
	PALLET2 - OBJECT
	PALLET3 - OBJECT
	PALLET4 - OBJECT
	PALLET5 - OBJECT
	CRATE0 - OBJECT
	CRATE1 - OBJECT
	CRATE2 - OBJECT
	CRATE3 - OBJECT
	CRATE4 - OBJECT
	CRATE5 - OBJECT
	CRATE6 - OBJECT
	CRATE7 - OBJECT
	CRATE8 - OBJECT
	CRATE9 - OBJECT
	HOIST0 - OBJECT
	HOIST1 - OBJECT
	HOIST2 - OBJECT
	DEPOT0 - DEPOT
	DISTRIBUTOR0 - DISTRIBUTOR
	DISTRIBUTOR1 - DISTRIBUTOR
	TRUCK0 - TRUCK
	TRUCK1 - TRUCK
	HOIST0 - HOIST
	HOIST1 - HOIST
	HOIST2 - HOIST
	PALLET0 - SURFACE
	PALLET1 - SURFACE
	PALLET2 - SURFACE
	PALLET3 - SURFACE
	PALLET4 - SURFACE
	PALLET5 - SURFACE
	CRATE0 - SURFACE
	CRATE1 - SURFACE
	CRATE2 - SURFACE
	CRATE3 - SURFACE
	CRATE4 - SURFACE
	CRATE5 - SURFACE
	CRATE6 - SURFACE
	CRATE7 - SURFACE
	CRATE8 - SURFACE
	CRATE9 - SURFACE
	PALLET0 - PALLET
	PALLET1 - PALLET
	PALLET2 - PALLET
	PALLET3 - PALLET
	PALLET4 - PALLET
	PALLET5 - PALLET
	CRATE0 - CRATE
	CRATE1 - CRATE
	CRATE2 - CRATE
	CRATE3 - CRATE
	CRATE4 - CRATE
	CRATE5 - CRATE
	CRATE6 - CRATE
	CRATE7 - CRATE
	CRATE8 - CRATE
	CRATE9 - CRATE
)
(:htn
	:tasks (and
	(task0 (ACHIEVE-ON CRATE0 PALLET3))
	(task1 (ACHIEVE-ON CRATE1 CRATE0))
	(task2 (ACHIEVE-ON CRATE3 CRATE8))
	(task3 (ACHIEVE-ON CRATE6 PALLET2))
	(task4 (ACHIEVE-ON CRATE7 PALLET1))
	(task5 (ACHIEVE-ON CRATE8 PALLET4))
	(task6 (ACHIEVE-ON CRATE9 PALLET0))
	)
:ordering (and
	(task6 < task5)
	(task5 < task4)
	(task4 < task3)
	(task3 < task2)
	(task2 < task1)
	(task1 < task0)
)
:constraints ( )
)
(:init
        (AT PALLET0 DEPOT0)
        (CLEAR CRATE2)
        (AT PALLET1 DISTRIBUTOR0)
        (CLEAR CRATE6)
        (AT PALLET2 DISTRIBUTOR1)
        (CLEAR CRATE9)
        (AT PALLET3 DISTRIBUTOR1)
        (CLEAR CRATE7)
        (AT PALLET4 DISTRIBUTOR0)
        (CLEAR CRATE0)
        (AT PALLET5 DISTRIBUTOR0)
        (CLEAR CRATE8)
        (AT TRUCK0 DISTRIBUTOR0)
        (AT TRUCK1 DISTRIBUTOR0)
        (AT HOIST0 DEPOT0)
        (AVAILABLE HOIST0)
        (AT HOIST1 DISTRIBUTOR0)
        (AVAILABLE HOIST1)
        (AT HOIST2 DISTRIBUTOR1)
        (AVAILABLE HOIST2)
        (AT CRATE0 DISTRIBUTOR0)
        (ON CRATE0 PALLET4)
        (AT CRATE1 DISTRIBUTOR0)
        (ON CRATE1 PALLET1)
        (AT CRATE2 DEPOT0)
        (ON CRATE2 PALLET0)
        (AT CRATE3 DISTRIBUTOR0)
        (ON CRATE3 PALLET5)
        (AT CRATE4 DISTRIBUTOR1)
        (ON CRATE4 PALLET3)
        (AT CRATE5 DISTRIBUTOR0)
        (ON CRATE5 CRATE1)
        (AT CRATE6 DISTRIBUTOR0)
        (ON CRATE6 CRATE5)
        (AT CRATE7 DISTRIBUTOR1)
        (ON CRATE7 CRATE4)
        (AT CRATE8 DISTRIBUTOR0)
        (ON CRATE8 CRATE3)
        (AT CRATE9 DISTRIBUTOR1)
        (ON CRATE9 PALLET2)
)
)

