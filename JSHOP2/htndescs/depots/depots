(define (domain depots
(:requirements :typing)
(:types
	PLACE LOCATABLE - OBJECT
	DEPOT DISTRIBUTOR - PLACE
	TRUCK HOIST SURFACE - LOCATABLE
	PALLET CRATE - SURFACE
)
(:predicates
	( AT ?LOCATABLE0 - LOCATABLE ?PLACE1 - PLACE )
	( ON ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
	( IN ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	( LIFTING ?HOIST0 - HOIST ?CRATE1 - CRATE )
	( AVAILABLE ?HOIST0 - HOIST )
	( CLEAR ?SURFACE0 - SURFACE )
)
( :action !DRIVE
	:parameters ( ?TRUCK0 - TRUCK ?PLACE1 - PLACE ?PLACE2 - PLACE)
	:precondition (and
		 ( AT ?TRUCK0 ?PLACE1 ))
	:effect (and
		 ( NOT ( AT ?TRUCK0 ?PLACE1 ) ) ( AT ?TRUCK0 ?PLACE2 ))
)
( :action !LIFT
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE)
	:precondition (and
		 ( AT ?HOIST0 ?PLACE3 ) ( AVAILABLE ?HOIST0 ) ( AT ?CRATE1 ?PLACE3 ) ( ON ?CRATE1 ?SURFACE2 ) ( CLEAR ?CRATE1 ))
	:effect (and
		 ( NOT ( AT ?CRATE1 ?PLACE3 ) ) ( NOT ( CLEAR ?CRATE1 ) ) ( NOT ( AVAILABLE ?HOIST0 ) ) ( NOT ( ON ?CRATE1 ?SURFACE2 ) ) ( LIFTING ?HOIST0 ?CRATE1 ) ( CLEAR ?SURFACE2 ))
)
( :action !DROP
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE)
	:precondition (and
		 ( AT ?HOIST0 ?PLACE3 ) ( AT ?SURFACE2 ?PLACE3 ) ( CLEAR ?SURFACE2 ) ( LIFTING ?HOIST0 ?CRATE1 ))
	:effect (and
		 ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( NOT ( CLEAR ?SURFACE2 ) ) ( AVAILABLE ?HOIST0 ) ( AT ?CRATE1 ?PLACE3 ) ( CLEAR ?CRATE1 ) ( ON ?CRATE1 ?SURFACE2 ))
)
( :action !LOAD
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE)
	:precondition (and
		 ( AT ?HOIST0 ?PLACE3 ) ( AT ?TRUCK2 ?PLACE3 ) ( LIFTING ?HOIST0 ?CRATE1 ))
	:effect (and
		 ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( IN ?CRATE1 ?TRUCK2 ) ( AVAILABLE ?HOIST0 ))
)
( :action !UNLOAD
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE)
	:precondition (and
		 ( AT ?HOIST0 ?PLACE3 ) ( AT ?TRUCK2 ?PLACE3 ) ( AVAILABLE ?HOIST0 ) ( IN ?CRATE1 ?TRUCK2 ))
	:effect (and
		 ( NOT ( IN ?CRATE1 ?TRUCK2 ) ) ( NOT ( AVAILABLE ?HOIST0 ) ) ( LIFTING ?HOIST0 ?CRATE1 ))
)
(:task DO-AT-LIFT1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-AT-LIFT1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-AT-LIFT1 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( AT ?CRATE1 ?PLACE3 ))
	:ordered-subtasks (and  ( ACHIEVE-CLEAR ?CRATE1 ) ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !LIFT ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-LIFTING-DROP1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-DROP1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-LIFTING-DROP1 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( !DROP ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-LIFTING-LOAD1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-LOAD1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-LIFTING-LOAD1 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( !LOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-IN-UNLOAD1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-IN-UNLOAD1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-IN-UNLOAD1 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( IN ?CRATE1 ?TRUCK2 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !UNLOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-ON-LIFT2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-ON-LIFT2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-ON-LIFT2 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( ON ?CRATE1 ?SURFACE2 ))
	:ordered-subtasks (and  ( ACHIEVE-CLEAR ?CRATE1 ) ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !LIFT ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-LIFTING-DROP2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-DROP2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-LIFTING-DROP2 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( !DROP ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-LIFTING-LOAD2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-LOAD2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-LIFTING-LOAD2 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( !LOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-IN-UNLOAD2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-IN-UNLOAD2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-IN-UNLOAD2 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( IN ?CRATE1 ?TRUCK2 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !UNLOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-ON-LIFT3
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-ON-LIFT3
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-ON-LIFT3 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( ON ?CRATE1 ?SURFACE2 ))
	:ordered-subtasks (and  ( ACHIEVE-CLEAR ?CRATE1 ) ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !LIFT ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-CLEAR-DROP3
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-CLEAR-DROP3
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-CLEAR-DROP3 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( CLEAR ?SURFACE2 ))
	:ordered-subtasks (and  ( ACHIEVE-LIFTING ?HOIST0 ?CRATE1 ) ( !DROP ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-LIFTING-LOAD4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-LOAD4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-LIFTING-LOAD4 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( !LOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-LIFTING-DROP4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-DROP4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-LIFTING-DROP4 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( !DROP ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-IN-UNLOAD4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-IN-UNLOAD4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-IN-UNLOAD4 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( IN ?CRATE1 ?TRUCK2 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !UNLOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-CLEAR-LIFT4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-CLEAR-LIFT4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-CLEAR-LIFT4 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( CLEAR ?CRATE1 ))
	:ordered-subtasks (and  ( ACHIEVE-AVAILABLE ?HOIST0 ) ( !LIFT ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-AVAILABLE-LIFT5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-AVAILABLE-LIFT5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-AVAILABLE-LIFT5 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( AVAILABLE ?HOIST0 ))
	:ordered-subtasks (and  ( !LIFT ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-AVAILABLE-UNLOAD5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-AVAILABLE-UNLOAD5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-AVAILABLE-UNLOAD5 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( AVAILABLE ?HOIST0 ))
	:ordered-subtasks (and  ( ACHIEVE-IN ?CRATE1 ?TRUCK2 ) ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( !UNLOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
(:task DO-LIFTING-DROP5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-DROP5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?SURFACE2 - SURFACE ?PLACE3 - PLACE )
	:task ( DO-LIFTING-DROP5 ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( !DROP ?HOIST0 ?CRATE1 ?SURFACE2 ?PLACE3 ) )
)
(:task DO-LIFTING-LOAD5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
)
(:method M-DO-LIFTING-LOAD5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE ?TRUCK2 - TRUCK ?PLACE3 - PLACE )
	:task ( DO-LIFTING-LOAD5 ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 )
	:precondition (and  ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks (and  ( ACHIEVE-AT ?TRUCK2 ?PLACE3 ) ( !LOAD ?HOIST0 ?CRATE1 ?TRUCK2 ?PLACE3 ) )
)
( :task ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?PLACE1 - PLACE )
)
( :method M-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?PLACE1 - PLACE )
	:task  ( ACHIEVE-AT ?TRUCK0 ?PLACE1 )
	:precondition (and ( AT ?TRUCK0 ?PLACE1 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-AT
	:parameters ( ?TRUCK0 - TRUCK ?PLACE1 - PLACE )
	:task  ( ACHIEVE-AT ?TRUCK0 ?PLACE1 )
	:precondition ( NOT ( AT ?TRUCK0 ?PLACE1 ))
	:subtasks  ( ACHIEVE-AT0 ?TRUCK0 ?PLACE1 )
)
( :task ACHIEVE-AT0
	:parameters ( ?TRUCK0 - TRUCK ?PLACE1 - PLACE )
)
( :method M-ACHIEVE-AT0
	:parameters ( ?TRUCK0 - TRUCK ?PLACE1 - PLACE )
	:task ( ACHIEVE-AT0 ?TRUCK0 ?PLACE1 )
	:precondition  ( AT ?TRUCK0 ?PLACE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-AT0
	:parameters ( ?PLACE1 - PLACE ?PLACE3 - PLACE ?PLACE6 - PLACE ?TRUCK0 - TRUCK)
	:task  ( ACHIEVE-AT0 ?TRUCK0 ?PLACE1 )
	:precondition (and ( NOT ( AT ?TRUCK0 ?PLACE1 ) ) ( AT ?TRUCK0 ?PLACE3 ) )
	:ordered-subtasks (and  ( !DRIVE ?TRUCK0 ?PLACE3 ?PLACE6 ) ( ACHIEVE-AT0 ?TRUCK0 ?PLACE1 ) )
)
( :task ACHIEVE-AT
	:parameters ( ?CRATE0 - CRATE ?PLACE1 - PLACE )
)
( :method M-ACHIEVE-AT
	:parameters ( ?CRATE0 - CRATE ?PLACE1 - PLACE )
	:task  ( ACHIEVE-AT ?CRATE0 ?PLACE1 )
	:precondition (and ( AT ?CRATE0 ?PLACE1 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-AT
	:parameters ( ?CRATE0 - CRATE ?PLACE1 - PLACE )
	:task  ( ACHIEVE-AT ?CRATE0 ?PLACE1 )
	:precondition ( NOT ( AT ?CRATE0 ?PLACE1 ))
	:subtasks  ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 )
)
( :task ACHIEVE-AT1
	:parameters ( ?CRATE0 - CRATE ?PLACE1 - PLACE )
)
( :method M-ACHIEVE-AT1
	:parameters ( ?CRATE0 - CRATE ?PLACE1 - PLACE )
	:task ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 )
	:precondition  ( AT ?CRATE0 ?PLACE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-AT1
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE1 - PLACE ?PLACE3 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 )
	:precondition (and ( NOT ( AT ?CRATE0 ?PLACE1 ) ) ( AT ?CRATE0 ?PLACE3 ) ( ON ?CRATE0 ?SURFACE6 ) )
	:ordered-subtasks (and  ( DO-AT-LIFT1 ?HOIST4 ?CRATE0 ?SURFACE6 ?PLACE3 ) ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 ) )
)
( :method M-ACHIEVE-AT1
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE1 - PLACE ?PLACE7 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( AT ?CRATE0 ?PLACE1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP1 ?HOIST2 ?CRATE0 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 ) )
)
( :method M-ACHIEVE-AT1
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE1 - PLACE ?PLACE7 - PLACE ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( AT ?CRATE0 ?PLACE1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD1 ?HOIST2 ?CRATE0 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 ) )
)
( :method M-ACHIEVE-AT1
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE1 - PLACE ?PLACE7 - PLACE ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( AT ?CRATE0 ?PLACE1 ) ) ( IN ?CRATE0 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD1 ?HOIST4 ?CRATE0 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 ) )
)
( :method M-ACHIEVE-LIFTING1
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST4 - HOIST ?PLACE3 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( AT ?CRATE1 ?PLACE3 ) ( ON ?CRATE1 ?SURFACE6 ) )
	:ordered-subtasks (and  ( DO-AT-LIFT1 ?HOIST4 ?CRATE1 ?SURFACE6 ?PLACE3 ) ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 ) )
)
( :task ACHIEVE-LIFTING
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
)
( :method M-ACHIEVE-LIFTING
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task  ( ACHIEVE-LIFTING ?HOIST0 ?CRATE1 )
	:precondition (and ( LIFTING ?HOIST0 ?CRATE1 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-LIFTING
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task  ( ACHIEVE-LIFTING ?HOIST0 ?CRATE1 )
	:precondition ( NOT ( LIFTING ?HOIST0 ?CRATE1 ))
	:subtasks  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
)
( :task ACHIEVE-LIFTING1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
)
( :method M-ACHIEVE-LIFTING1
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition  ( LIFTING ?HOIST0 ?CRATE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-LIFTING1
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST2 ?CRATE1 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP1 ?HOIST2 ?CRATE1 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING1
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST2 - HOIST ?PLACE7 - PLACE ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST2 ?CRATE1 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD1 ?HOIST2 ?CRATE1 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING1
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST4 - HOIST ?PLACE7 - PLACE ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( IN ?CRATE1 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD1 ?HOIST4 ?CRATE1 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-IN1
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE3 - PLACE ?SURFACE6 - SURFACE ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-AT1 ?CRATE0 ?PLACE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( AT ?CRATE0 ?PLACE3 ) ( ON ?CRATE0 ?SURFACE6 ) )
	:ordered-subtasks (and  ( DO-AT-LIFT1 ?HOIST4 ?CRATE0 ?SURFACE6 ?PLACE3 ) ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN1
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP1 ?HOIST2 ?CRATE0 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN1
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?TRUCK1 - TRUCK ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING1 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD1 ?HOIST2 ?CRATE0 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 ) )
)
( :task ACHIEVE-IN
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-IN
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?CRATE0 ?TRUCK1 )
	:precondition (and ( IN ?CRATE0 ?TRUCK1 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-IN
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?CRATE0 ?TRUCK1 )
	:precondition ( NOT ( IN ?CRATE0 ?TRUCK1 ))
	:subtasks  ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 )
)
( :task ACHIEVE-IN1
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-IN1
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 )
	:precondition  ( IN ?CRATE0 ?TRUCK1 )
	:subtasks ( )
)
( :method M-ACHIEVE-IN1
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?TRUCK1 - TRUCK ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( IN ?CRATE0 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD1 ?HOIST4 ?CRATE0 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-IN1 ?CRATE0 ?TRUCK1 ) )
)
( :task ACHIEVE-ON
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
)
( :method M-ACHIEVE-ON
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
	:task  ( ACHIEVE-ON ?CRATE0 ?SURFACE1 )
	:precondition (and ( ON ?CRATE0 ?SURFACE1 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-ON
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
	:task  ( ACHIEVE-ON ?CRATE0 ?SURFACE1 )
	:precondition ( NOT ( ON ?CRATE0 ?SURFACE1 ))
	:subtasks  ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 )
)
( :task ACHIEVE-ON2
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
)
( :method M-ACHIEVE-ON2
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
	:task ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 )
	:precondition  ( ON ?CRATE0 ?SURFACE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-ON2
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?SURFACE1 - SURFACE ?SURFACE3 - SURFACE)
	:task  ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 )
	:precondition (and ( NOT ( ON ?CRATE0 ?SURFACE1 ) ) ( ON ?CRATE0 ?SURFACE3 ) ( AT ?HOIST4 ?PLACE7 ) ( AT ?CRATE0 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-ON-LIFT2 ?HOIST4 ?CRATE0 ?SURFACE3 ?PLACE7 ) ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 ) )
)
( :method M-ACHIEVE-ON2
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE1 - SURFACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( ON ?CRATE0 ?SURFACE1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP2 ?HOIST2 ?CRATE0 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 ) )
)
( :method M-ACHIEVE-ON2
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE1 - SURFACE ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( ON ?CRATE0 ?SURFACE1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD2 ?HOIST2 ?CRATE0 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 ) )
)
( :method M-ACHIEVE-ON2
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?SURFACE1 - SURFACE ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( ON ?CRATE0 ?SURFACE1 ) ) ( IN ?CRATE0 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD2 ?HOIST4 ?CRATE0 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 ) )
)
( :method M-ACHIEVE-LIFTING2
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST4 - HOIST ?PLACE7 - PLACE ?SURFACE3 - SURFACE)
	:task  ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( ON ?CRATE1 ?SURFACE3 ) ( AT ?HOIST4 ?PLACE7 ) ( AT ?CRATE1 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-ON-LIFT2 ?HOIST4 ?CRATE1 ?SURFACE3 ?PLACE7 ) ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task  ( ACHIEVE-LIFTING ?HOIST0 ?CRATE1 )
	:precondition ( NOT ( LIFTING ?HOIST0 ?CRATE1 ))
	:subtasks  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
)
( :task ACHIEVE-LIFTING2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
)
( :method M-ACHIEVE-LIFTING2
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition  ( LIFTING ?HOIST0 ?CRATE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-LIFTING2
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST2 ?CRATE1 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP2 ?HOIST2 ?CRATE1 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING2
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST2 - HOIST ?PLACE7 - PLACE ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST2 ?CRATE1 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD2 ?HOIST2 ?CRATE1 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING2
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST4 - HOIST ?PLACE7 - PLACE ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( IN ?CRATE1 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD2 ?HOIST4 ?CRATE1 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-IN2
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?SURFACE3 - SURFACE ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-ON2 ?CRATE0 ?SURFACE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( ON ?CRATE0 ?SURFACE3 ) ( AT ?HOIST4 ?PLACE7 ) ( AT ?CRATE0 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-ON-LIFT2 ?HOIST4 ?CRATE0 ?SURFACE3 ?PLACE7 ) ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN2
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP2 ?HOIST2 ?CRATE0 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN2
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?TRUCK1 - TRUCK ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING2 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD2 ?HOIST2 ?CRATE0 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?CRATE0 ?TRUCK1 )
	:precondition ( NOT ( IN ?CRATE0 ?TRUCK1 ))
	:subtasks  ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 )
)
( :task ACHIEVE-IN2
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-IN2
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 )
	:precondition  ( IN ?CRATE0 ?TRUCK1 )
	:subtasks ( )
)
( :method M-ACHIEVE-IN2
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?TRUCK1 - TRUCK ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( IN ?CRATE0 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD2 ?HOIST4 ?CRATE0 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-IN2 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-ON
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
	:task  ( ACHIEVE-ON ?CRATE0 ?SURFACE1 )
	:precondition ( NOT ( ON ?CRATE0 ?SURFACE1 ))
	:subtasks  ( ACHIEVE-ON3 ?CRATE0 ?SURFACE1 )
)
( :task ACHIEVE-ON3
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
)
( :method M-ACHIEVE-ON3
	:parameters ( ?CRATE0 - CRATE ?SURFACE1 - SURFACE )
	:task ( ACHIEVE-ON3 ?CRATE0 ?SURFACE1 )
	:precondition  ( ON ?CRATE0 ?SURFACE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-ON3
	:parameters ( ?CRATE0 - CRATE ?CRATE2 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?SURFACE1 - SURFACE)
	:task  ( ACHIEVE-ON3 ?CRATE0 ?SURFACE1 )
	:precondition (and ( NOT ( ON ?CRATE0 ?SURFACE1 ) ) ( ON ?CRATE2 ?SURFACE1 ) ( AT ?HOIST4 ?PLACE7 ) ( AT ?CRATE2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-ON-LIFT3 ?HOIST4 ?CRATE2 ?SURFACE1 ?PLACE7 ) ( ACHIEVE-ON3 ?CRATE0 ?SURFACE1 ) )
)
( :method M-ACHIEVE-ON3
	:parameters ( ?CRATE0 - CRATE ?CRATE4 - CRATE ?HOIST3 - HOIST ?PLACE6 - PLACE ?SURFACE1 - SURFACE)
	:task  ( ACHIEVE-CLEAR3 ?SURFACE0 )
	:precondition (and ( NOT ( ON ?CRATE0 ?SURFACE1 ) ) ( CLEAR ?SURFACE1 ) ( AT ?HOIST3 ?PLACE6 ) ( AT ?SURFACE1 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-CLEAR-DROP3 ?HOIST3 ?CRATE4 ?SURFACE1 ?PLACE6 ) ( ACHIEVE-ON3 ?CRATE0 ?SURFACE1 ) )
)
( :method M-ACHIEVE-CLEAR3
	:parameters ( ?CRATE1 - CRATE ?HOIST3 - HOIST ?PLACE6 - PLACE ?SURFACE0 - SURFACE)
	:task  ( ACHIEVE-ON3 ?CRATE0 ?SURFACE1 )
	:precondition (and ( NOT ( CLEAR ?SURFACE0 ) ) ( ON ?CRATE1 ?SURFACE0 ) ( AT ?HOIST3 ?PLACE6 ) ( AT ?CRATE1 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-ON-LIFT3 ?HOIST3 ?CRATE1 ?SURFACE0 ?PLACE6 ) ( ACHIEVE-CLEAR3 ?SURFACE0 ) )
)
( :task ACHIEVE-CLEAR
	:parameters ( ?SURFACE0 - SURFACE )
)
( :method M-ACHIEVE-CLEAR
	:parameters ( ?SURFACE0 - SURFACE )
	:task  ( ACHIEVE-CLEAR ?SURFACE0 )
	:precondition (and ( CLEAR ?SURFACE0 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-CLEAR
	:parameters ( ?SURFACE0 - SURFACE )
	:task  ( ACHIEVE-CLEAR ?SURFACE0 )
	:precondition ( NOT ( CLEAR ?SURFACE0 ))
	:subtasks  ( ACHIEVE-CLEAR3 ?SURFACE0 )
)
( :task ACHIEVE-CLEAR3
	:parameters ( ?SURFACE0 - SURFACE )
)
( :method M-ACHIEVE-CLEAR3
	:parameters ( ?SURFACE0 - SURFACE )
	:task ( ACHIEVE-CLEAR3 ?SURFACE0 )
	:precondition  ( CLEAR ?SURFACE0 )
	:subtasks ( )
)
( :method M-ACHIEVE-LIFTING
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task  ( ACHIEVE-LIFTING ?HOIST0 ?CRATE1 )
	:precondition ( NOT ( LIFTING ?HOIST0 ?CRATE1 ))
	:subtasks  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
)
( :task ACHIEVE-LIFTING4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
)
( :method M-ACHIEVE-LIFTING4
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition  ( LIFTING ?HOIST0 ?CRATE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-LIFTING4
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST2 - HOIST ?PLACE7 - PLACE ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST2 ?CRATE1 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD4 ?HOIST2 ?CRATE1 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING4
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST2 ?CRATE1 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP4 ?HOIST2 ?CRATE1 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING4
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST4 - HOIST ?PLACE7 - PLACE ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( IN ?CRATE1 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD4 ?HOIST4 ?CRATE1 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING4
	:parameters ( ?CRATE1 - CRATE ?HOIST0 - HOIST ?HOIST3 - HOIST ?PLACE6 - PLACE ?SURFACE5 - SURFACE)
	:task  ( ACHIEVE-CLEAR4 ?CRATE0 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( CLEAR ?CRATE1 ) ( AT ?HOIST3 ?PLACE6 ) ( AT ?CRATE1 ?PLACE6 ) ( ON ?CRATE1 ?SURFACE5 ) )
	:ordered-subtasks (and  ( DO-CLEAR-LIFT4 ?HOIST3 ?CRATE1 ?SURFACE5 ?PLACE6 ) ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-IN4
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?TRUCK1 - TRUCK ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD4 ?HOIST2 ?CRATE0 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN4
	:parameters ( ?CRATE0 - CRATE ?HOIST2 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( LIFTING ?HOIST2 ?CRATE0 ) ( AT ?HOIST2 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP4 ?HOIST2 ?CRATE0 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task  ( ACHIEVE-IN ?CRATE0 ?TRUCK1 )
	:precondition ( NOT ( IN ?CRATE0 ?TRUCK1 ))
	:subtasks  ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 )
)
( :task ACHIEVE-IN4
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
)
( :method M-ACHIEVE-IN4
	:parameters ( ?CRATE0 - CRATE ?TRUCK1 - TRUCK )
	:task ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 )
	:precondition  ( IN ?CRATE0 ?TRUCK1 )
	:subtasks ( )
)
( :method M-ACHIEVE-IN4
	:parameters ( ?CRATE0 - CRATE ?HOIST4 - HOIST ?PLACE7 - PLACE ?TRUCK1 - TRUCK ?TRUCK3 - TRUCK)
	:task  ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( IN ?CRATE0 ?TRUCK3 ) ( AT ?HOIST4 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD4 ?HOIST4 ?CRATE0 ?TRUCK3 ?PLACE7 ) ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-IN4
	:parameters ( ?CRATE0 - CRATE ?HOIST3 - HOIST ?PLACE6 - PLACE ?SURFACE5 - SURFACE ?TRUCK1 - TRUCK)
	:task  ( ACHIEVE-CLEAR4 ?CRATE0 )
	:precondition (and ( NOT ( IN ?CRATE0 ?TRUCK1 ) ) ( CLEAR ?CRATE0 ) ( AT ?HOIST3 ?PLACE6 ) ( AT ?CRATE0 ?PLACE6 ) ( ON ?CRATE0 ?SURFACE5 ) )
	:ordered-subtasks (and  ( DO-CLEAR-LIFT4 ?HOIST3 ?CRATE0 ?SURFACE5 ?PLACE6 ) ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 ) )
)
( :method M-ACHIEVE-CLEAR4
	:parameters ( ?CRATE0 - CRATE ?HOIST1 - HOIST ?PLACE6 - PLACE ?TRUCK5 - TRUCK)
	:task  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( CLEAR ?CRATE0 ) ) ( LIFTING ?HOIST1 ?CRATE0 ) ( AT ?HOIST1 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD4 ?HOIST1 ?CRATE0 ?TRUCK5 ?PLACE6 ) ( ACHIEVE-CLEAR4 ?CRATE0 ) )
)
( :method M-ACHIEVE-CLEAR4
	:parameters ( ?CRATE0 - CRATE ?HOIST1 - HOIST ?PLACE6 - PLACE ?SURFACE5 - SURFACE)
	:task  ( ACHIEVE-LIFTING4 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( CLEAR ?CRATE0 ) ) ( LIFTING ?HOIST1 ?CRATE0 ) ( AT ?HOIST1 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP4 ?HOIST1 ?CRATE0 ?SURFACE5 ?PLACE6 ) ( ACHIEVE-CLEAR4 ?CRATE0 ) )
)
( :method M-ACHIEVE-CLEAR4
	:parameters ( ?CRATE0 - CRATE ?HOIST3 - HOIST ?PLACE6 - PLACE ?TRUCK2 - TRUCK)
	:task  ( ACHIEVE-IN4 ?CRATE0 ?TRUCK1 )
	:precondition (and ( NOT ( CLEAR ?CRATE0 ) ) ( IN ?CRATE0 ?TRUCK2 ) ( AT ?HOIST3 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-IN-UNLOAD4 ?HOIST3 ?CRATE0 ?TRUCK2 ?PLACE6 ) ( ACHIEVE-CLEAR4 ?CRATE0 ) )
)
( :task ACHIEVE-CLEAR
	:parameters ( ?CRATE0 - CRATE )
)
( :method M-ACHIEVE-CLEAR
	:parameters ( ?CRATE0 - CRATE )
	:task  ( ACHIEVE-CLEAR ?CRATE0 )
	:precondition (and ( CLEAR ?CRATE0 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-CLEAR
	:parameters ( ?CRATE0 - CRATE )
	:task  ( ACHIEVE-CLEAR ?CRATE0 )
	:precondition ( NOT ( CLEAR ?CRATE0 ))
	:subtasks  ( ACHIEVE-CLEAR4 ?CRATE0 )
)
( :task ACHIEVE-CLEAR4
	:parameters ( ?CRATE0 - CRATE )
)
( :method M-ACHIEVE-CLEAR4
	:parameters ( ?CRATE0 - CRATE )
	:task ( ACHIEVE-CLEAR4 ?CRATE0 )
	:precondition  ( CLEAR ?CRATE0 )
	:subtasks ( )
)
( :task ACHIEVE-AVAILABLE
	:parameters ( ?HOIST0 - HOIST )
)
( :method M-ACHIEVE-AVAILABLE
	:parameters ( ?HOIST0 - HOIST )
	:task  ( ACHIEVE-AVAILABLE ?HOIST0 )
	:precondition (and ( AVAILABLE ?HOIST0 ))
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-AVAILABLE
	:parameters ( ?HOIST0 - HOIST )
	:task  ( ACHIEVE-AVAILABLE ?HOIST0 )
	:precondition ( NOT ( AVAILABLE ?HOIST0 ))
	:subtasks  ( ACHIEVE-AVAILABLE5 ?HOIST0 )
)
( :task ACHIEVE-AVAILABLE5
	:parameters ( ?HOIST0 - HOIST )
)
( :method M-ACHIEVE-AVAILABLE5
	:parameters ( ?HOIST0 - HOIST )
	:task ( ACHIEVE-AVAILABLE5 ?HOIST0 )
	:precondition  ( AVAILABLE ?HOIST0 )
	:subtasks ( )
)
( :method M-ACHIEVE-AVAILABLE5
	:parameters ( ?CRATE2 - CRATE ?HOIST0 - HOIST ?PLACE6 - PLACE ?SURFACE5 - SURFACE)
	:task  ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( AVAILABLE ?HOIST0 ) ) ( LIFTING ?HOIST0 ?CRATE2 ) ( AT ?HOIST0 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP5 ?HOIST0 ?CRATE2 ?SURFACE5 ?PLACE6 ) ( ACHIEVE-AVAILABLE5 ?HOIST0 ) )
)
( :method M-ACHIEVE-AVAILABLE5
	:parameters ( ?CRATE2 - CRATE ?HOIST0 - HOIST ?PLACE6 - PLACE ?TRUCK5 - TRUCK)
	:task  ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( AVAILABLE ?HOIST0 ) ) ( LIFTING ?HOIST0 ?CRATE2 ) ( AT ?HOIST0 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD5 ?HOIST0 ?CRATE2 ?TRUCK5 ?PLACE6 ) ( ACHIEVE-AVAILABLE5 ?HOIST0 ) )
)
( :method M-ACHIEVE-LIFTING5
	:parameters ( ?CRATE1 - CRATE ?CRATE4 - CRATE ?HOIST0 - HOIST ?PLACE6 - PLACE ?SURFACE5 - SURFACE)
	:task  ( ACHIEVE-AVAILABLE5 ?HOIST0 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( AVAILABLE ?HOIST0 ) ( AT ?HOIST0 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-AVAILABLE-LIFT5 ?HOIST0 ?CRATE4 ?SURFACE5 ?PLACE6 ) ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING5
	:parameters ( ?CRATE1 - CRATE ?CRATE4 - CRATE ?HOIST0 - HOIST ?PLACE6 - PLACE ?TRUCK5 - TRUCK)
	:task  ( ACHIEVE-AVAILABLE5 ?HOIST0 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( AVAILABLE ?HOIST0 ) ( AT ?HOIST0 ?PLACE6 ) )
	:ordered-subtasks (and  ( DO-AVAILABLE-UNLOAD5 ?HOIST0 ?CRATE4 ?TRUCK5 ?PLACE6 ) ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task  ( ACHIEVE-LIFTING ?HOIST0 ?CRATE1 )
	:precondition ( NOT ( LIFTING ?HOIST0 ?CRATE1 ))
	:subtasks  ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 )
)
( :task ACHIEVE-LIFTING5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
)
( :method M-ACHIEVE-LIFTING5
	:parameters ( ?HOIST0 - HOIST ?CRATE1 - CRATE )
	:task ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 )
	:precondition  ( LIFTING ?HOIST0 ?CRATE1 )
	:subtasks ( )
)
( :method M-ACHIEVE-LIFTING5
	:parameters ( ?CRATE1 - CRATE ?CRATE3 - CRATE ?HOIST0 - HOIST ?PLACE7 - PLACE ?SURFACE6 - SURFACE)
	:task  ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST0 ?CRATE3 ) ( AT ?HOIST0 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-DROP5 ?HOIST0 ?CRATE3 ?SURFACE6 ?PLACE7 ) ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 ) )
)
( :method M-ACHIEVE-LIFTING5
	:parameters ( ?CRATE1 - CRATE ?CRATE3 - CRATE ?HOIST0 - HOIST ?PLACE7 - PLACE ?TRUCK6 - TRUCK)
	:task  ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 )
	:precondition (and ( NOT ( LIFTING ?HOIST0 ?CRATE1 ) ) ( LIFTING ?HOIST0 ?CRATE3 ) ( AT ?HOIST0 ?PLACE7 ) )
	:ordered-subtasks (and  ( DO-LIFTING-LOAD5 ?HOIST0 ?CRATE3 ?TRUCK6 ?PLACE7 ) ( ACHIEVE-LIFTING5 ?HOIST0 ?CRATE1 ) )
)
))
