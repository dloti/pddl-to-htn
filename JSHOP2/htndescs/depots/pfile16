(define (problem p)
(:domain depots)
(:objects
	DEPOT0 - PLACE
	DEPOT1 - PLACE
	DISTRIBUTOR0 - PLACE
	DISTRIBUTOR1 - PLACE
	TRUCK0 - LOCATABLE
	TRUCK1 - LOCATABLE
	TRUCK2 - LOCATABLE
	TRUCK3 - LOCATABLE
	PALLET0 - LOCATABLE
	PALLET1 - LOCATABLE
	PALLET2 - LOCATABLE
	PALLET3 - LOCATABLE
	PALLET4 - LOCATABLE
	PALLET5 - LOCATABLE
	PALLET6 - LOCATABLE
	PALLET7 - LOCATABLE
	CRATE0 - LOCATABLE
	CRATE1 - LOCATABLE
	CRATE2 - LOCATABLE
	CRATE3 - LOCATABLE
	CRATE4 - LOCATABLE
	CRATE5 - LOCATABLE
	HOIST0 - LOCATABLE
	HOIST1 - LOCATABLE
	HOIST2 - LOCATABLE
	HOIST3 - LOCATABLE
	HOIST4 - LOCATABLE
	HOIST5 - LOCATABLE
	HOIST6 - LOCATABLE
	HOIST7 - LOCATABLE
	DEPOT0 - OBJECT
	DEPOT1 - OBJECT
	DISTRIBUTOR0 - OBJECT
	DISTRIBUTOR1 - OBJECT
	TRUCK0 - OBJECT
	TRUCK1 - OBJECT
	TRUCK2 - OBJECT
	TRUCK3 - OBJECT
	PALLET0 - OBJECT
	PALLET1 - OBJECT
	PALLET2 - OBJECT
	PALLET3 - OBJECT
	PALLET4 - OBJECT
	PALLET5 - OBJECT
	PALLET6 - OBJECT
	PALLET7 - OBJECT
	CRATE0 - OBJECT
	CRATE1 - OBJECT
	CRATE2 - OBJECT
	CRATE3 - OBJECT
	CRATE4 - OBJECT
	CRATE5 - OBJECT
	HOIST0 - OBJECT
	HOIST1 - OBJECT
	HOIST2 - OBJECT
	HOIST3 - OBJECT
	HOIST4 - OBJECT
	HOIST5 - OBJECT
	HOIST6 - OBJECT
	HOIST7 - OBJECT
	DEPOT0 - DEPOT
	DEPOT1 - DEPOT
	DISTRIBUTOR0 - DISTRIBUTOR
	DISTRIBUTOR1 - DISTRIBUTOR
	TRUCK0 - TRUCK
	TRUCK1 - TRUCK
	TRUCK2 - TRUCK
	TRUCK3 - TRUCK
	HOIST0 - HOIST
	HOIST1 - HOIST
	HOIST2 - HOIST
	HOIST3 - HOIST
	HOIST4 - HOIST
	HOIST5 - HOIST
	HOIST6 - HOIST
	HOIST7 - HOIST
	PALLET0 - SURFACE
	PALLET1 - SURFACE
	PALLET2 - SURFACE
	PALLET3 - SURFACE
	PALLET4 - SURFACE
	PALLET5 - SURFACE
	PALLET6 - SURFACE
	PALLET7 - SURFACE
	CRATE0 - SURFACE
	CRATE1 - SURFACE
	CRATE2 - SURFACE
	CRATE3 - SURFACE
	CRATE4 - SURFACE
	CRATE5 - SURFACE
	PALLET0 - PALLET
	PALLET1 - PALLET
	PALLET2 - PALLET
	PALLET3 - PALLET
	PALLET4 - PALLET
	PALLET5 - PALLET
	PALLET6 - PALLET
	PALLET7 - PALLET
	CRATE0 - CRATE
	CRATE1 - CRATE
	CRATE2 - CRATE
	CRATE3 - CRATE
	CRATE4 - CRATE
	CRATE5 - CRATE
)
(:htn
	:tasks (and
	(task0 (ACHIEVE-ON CRATE0 PALLET3))
	(task1 (ACHIEVE-ON CRATE2 PALLET1))
	(task2 (ACHIEVE-ON CRATE3 PALLET0))
	(task3 (ACHIEVE-ON CRATE4 CRATE3))
	(task4 (ACHIEVE-ON CRATE5 PALLET2))
	)
:ordering (and
	(task4 < task3)
	(task3 < task2)
	(task2 < task1)
	(task1 < task0)
)
:constraints ( )
)
(:init
        (AT PALLET0 DEPOT0)
        (CLEAR CRATE5)
        (AT PALLET1 DEPOT1)
        (CLEAR CRATE3)
        (AT PALLET2 DISTRIBUTOR0)
        (CLEAR CRATE4)
        (AT PALLET3 DISTRIBUTOR1)
        (CLEAR PALLET3)
        (AT PALLET4 DEPOT1)
        (CLEAR CRATE0)
        (AT PALLET5 DISTRIBUTOR1)
        (CLEAR PALLET5)
        (AT PALLET6 DEPOT1)
        (CLEAR PALLET6)
        (AT PALLET7 DISTRIBUTOR0)
        (CLEAR PALLET7)
        (AT TRUCK0 DEPOT1)
        (AT TRUCK1 DEPOT1)
        (AT TRUCK2 DEPOT0)
        (AT TRUCK3 DISTRIBUTOR1)
        (AT HOIST0 DEPOT0)
        (AVAILABLE HOIST0)
        (AT HOIST1 DEPOT1)
        (AVAILABLE HOIST1)
        (AT HOIST2 DISTRIBUTOR0)
        (AVAILABLE HOIST2)
        (AT HOIST3 DISTRIBUTOR1)
        (AVAILABLE HOIST3)
        (AT HOIST4 DISTRIBUTOR1)
        (AVAILABLE HOIST4)
        (AT HOIST5 DEPOT1)
        (AVAILABLE HOIST5)
        (AT HOIST6 DEPOT1)
        (AVAILABLE HOIST6)
        (AT HOIST7 DISTRIBUTOR1)
        (AVAILABLE HOIST7)
        (AT CRATE0 DEPOT1)
        (ON CRATE0 PALLET4)
        (AT CRATE1 DEPOT1)
        (ON CRATE1 PALLET1)
        (AT CRATE2 DEPOT0)
        (ON CRATE2 PALLET0)
        (AT CRATE3 DEPOT1)
        (ON CRATE3 CRATE1)
        (AT CRATE4 DISTRIBUTOR0)
        (ON CRATE4 PALLET2)
        (AT CRATE5 DEPOT0)
        (ON CRATE5 CRATE2)
)
)

