(define (domain blocks
(:requirements :typing)
(:types
)
(:predicates
	( ON ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	( ONTABLE ?BLOCK0 - BLOCK )
	( CLEAR ?BLOCK0 - BLOCK )
	( HANDEMPTY )
	( HOLDING ?BLOCK0 - BLOCK )
)
( :action !PICK-UP
	:parameters ( ?BLOCK0 - BLOCK)
	:precondition (and
		 ( CLEAR ?BLOCK0 ) ( ONTABLE ?BLOCK0 ) ( HANDEMPTY ))
	:effect (and
		 ( NOT ( ONTABLE ?BLOCK0 ) ) ( NOT ( CLEAR ?BLOCK0 ) ) ( NOT ( HANDEMPTY ) ) ( HOLDING ?BLOCK0 ))
)
( :action !PUT-DOWN
	:parameters ( ?BLOCK0 - BLOCK)
	:precondition (and
		 ( HOLDING ?BLOCK0 ))
	:effect (and
		 ( NOT ( HOLDING ?BLOCK0 ) ) ( CLEAR ?BLOCK0 ) ( HANDEMPTY ) ( ONTABLE ?BLOCK0 ))
)
( :action !STACK
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:precondition (and
		 ( HOLDING ?BLOCK0 ) ( CLEAR ?BLOCK1 ))
	:effect (and
		 ( NOT ( HOLDING ?BLOCK0 ) ) ( NOT ( CLEAR ?BLOCK1 ) ) ( CLEAR ?BLOCK0 ) ( HANDEMPTY ) ( ON ?BLOCK0 ?BLOCK1 ))
)
( :action !UNSTACK
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:precondition (and
		 ( ON ?BLOCK0 ?BLOCK1 ) ( CLEAR ?BLOCK0 ) ( HANDEMPTY ))
	:effect (and
		 ( NOT ( CLEAR ?BLOCK0 ) ) ( NOT ( HANDEMPTY ) ) ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( HOLDING ?BLOCK0 ) ( CLEAR ?BLOCK1 ))
)
(:task DO-ON-UNSTACK0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
(:method M-DO-ON-UNSTACK0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:task ( DO-ON-UNSTACK0 ?BLOCK0 ?BLOCK1 )
	:precondition (and  ( ON ?BLOCK0 ?BLOCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-CLEAR ?BLOCK0 ) ( ACHIEVE-HANDEMPTY ) ( !UNSTACK ?BLOCK0 ?BLOCK1 ) )
)
(:task DO-ONTABLE-PICK-UP0
	:parameters ( ?BLOCK0 - BLOCK )
)
(:method M-DO-ONTABLE-PICK-UP0
	:parameters ( ?BLOCK0 - BLOCK )
	:task ( DO-ONTABLE-PICK-UP0 ?BLOCK0 )
	:precondition (and  ( ONTABLE ?BLOCK0 ))
	:ordered-subtasks (and  ( ACHIEVE-CLEAR ?BLOCK0 ) ( ACHIEVE-HANDEMPTY ) ( !PICK-UP ?BLOCK0 ) )
)
(:task DO-CLEAR-STACK1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
(:method M-DO-CLEAR-STACK1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:task ( DO-CLEAR-STACK1 ?BLOCK0 ?BLOCK1 )
	:precondition (and  ( CLEAR ?BLOCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-HOLDING ?BLOCK0 ) ( !STACK ?BLOCK0 ?BLOCK1 ) )
)
(:task DO-CLEAR-PICK-UP1
	:parameters ( ?BLOCK0 - BLOCK )
)
(:method M-DO-CLEAR-PICK-UP1
	:parameters ( ?BLOCK0 - BLOCK )
	:task ( DO-CLEAR-PICK-UP1 ?BLOCK0 )
	:precondition (and  ( CLEAR ?BLOCK0 ))
	:ordered-subtasks (and  ( ACHIEVE-HANDEMPTY ) ( !PICK-UP ?BLOCK0 ) )
)
(:task DO-CLEAR-UNSTACK1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
(:method M-DO-CLEAR-UNSTACK1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:task ( DO-CLEAR-UNSTACK1 ?BLOCK0 ?BLOCK1 )
	:precondition (and  ( CLEAR ?BLOCK0 ))
	:ordered-subtasks (and  ( ACHIEVE-HANDEMPTY ) ( !UNSTACK ?BLOCK0 ?BLOCK1 ) )
)
(:task DO-ON-UNSTACK1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
(:method M-DO-ON-UNSTACK1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:task ( DO-ON-UNSTACK1 ?BLOCK0 ?BLOCK1 )
	:precondition (and  ( ON ?BLOCK0 ?BLOCK1 ))
	:ordered-subtasks (and  ( ACHIEVE-CLEAR ?BLOCK0 ) ( ACHIEVE-HANDEMPTY ) ( !UNSTACK ?BLOCK0 ?BLOCK1 ) )
)
( :task ACHIEVE-HOLDING
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-HOLDING
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition (and ( HOLDING ?BLOCK0 ))
	:task  ( ACHIEVE-HOLDING ?BLOCK0 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-HOLDING
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition ( NOT ( HOLDING ?BLOCK0 ))
	:task  ( ACHIEVE-HOLDING ?BLOCK0 )
	:subtasks  ( ACHIEVE-HOLDING0 ?BLOCK0 )
)
( :task ACHIEVE-HOLDING0
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-HOLDING0
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition  ( HOLDING ?BLOCK0 )
	:task ( ACHIEVE-HOLDING0 ?BLOCK0 )
	:subtasks ( )
)
    ( :DALO ( ACHIEVE-HOLDING0 ?BLOCK0 )
              ( ( NOT ( HOLDING ?BLOCK0 ) ) ( ON ?BLOCK0 ?BLOCK2 ) ( BLOCK ?BLOCK0 ) ( BLOCK ?BLOCK2 ) )
              ( ( DO-ON-UNSTACK0 ?BLOCK0 ?BLOCK2 ) ( ACHIEVE-HOLDING0 ?BLOCK0 ) )
    )
    ( :DALO ( ACHIEVE-HOLDING0 ?BLOCK0 )
              ( ( NOT ( HOLDING ?BLOCK0 ) ) ( ONTABLE ?BLOCK0 ) ( BLOCK ?BLOCK0 ) )
              ( ( DO-ONTABLE-PICK-UP0 ?BLOCK0 ) ( ACHIEVE-HOLDING0 ?BLOCK0 ) )
    )
( :method M-ACHIEVE-ON0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK ?BLOCK4 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( HOLDING ?BLOCK0 ) ( CLEAR ?BLOCK4 ) )
	:ordered-subtasks (and  ( !STACK ?BLOCK0 ?BLOCK4 ) ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ON0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( HOLDING ?BLOCK0 ) )
	:ordered-subtasks (and  ( !PUT-DOWN ?BLOCK0 ) ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 ) )
)
( :task ACHIEVE-ON
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
( :method M-ACHIEVE-ON
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:precondition (and ( ON ?BLOCK0 ?BLOCK1 ))
	:task  ( ACHIEVE-ON ?BLOCK0 ?BLOCK1 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-ON
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:precondition ( NOT ( ON ?BLOCK0 ?BLOCK1 ))
	:task  ( ACHIEVE-ON ?BLOCK0 ?BLOCK1 )
	:subtasks  ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 )
)
( :task ACHIEVE-ON0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
( :method M-ACHIEVE-ON0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:precondition  ( ON ?BLOCK0 ?BLOCK1 )
	:task ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 )
	:subtasks ( )
)
( :method M-ACHIEVE-ON0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK ?BLOCK3 - BLOCK)
	:task  ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 )
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( ON ?BLOCK0 ?BLOCK3 ) )
	:ordered-subtasks (and  ( DO-ON-UNSTACK0 ?BLOCK0 ?BLOCK3 ) ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ON0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( ONTABLE ?BLOCK0 ) )
	:ordered-subtasks (and  ( DO-ONTABLE-PICK-UP0 ?BLOCK0 ) ( ACHIEVE-ON0 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ONTABLE0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK3 - BLOCK)
	:task 
	:precondition (and ( NOT ( ONTABLE ?BLOCK0 ) ) ( HOLDING ?BLOCK0 ) ( CLEAR ?BLOCK3 ) )
	:ordered-subtasks (and  ( !STACK ?BLOCK0 ?BLOCK3 ) ( ACHIEVE-ONTABLE0 ?BLOCK0 ) )
)
    ( :DALO ( ACHIEVE-ONTABLE0 ?BLOCK0 )
              ( ( NOT ( ONTABLE ?BLOCK0 ) ) ( HOLDING ?BLOCK0 ) ( BLOCK ?BLOCK0 ) )
              ( ( !PUT-DOWN ?BLOCK0 ) ( ACHIEVE-ONTABLE0 ?BLOCK0 ) )
    )
( :method M-ACHIEVE-ONTABLE0
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK2 - BLOCK)
	:task 
	:precondition (and ( NOT ( ONTABLE ?BLOCK0 ) ) ( ON ?BLOCK0 ?BLOCK2 ) )
	:ordered-subtasks (and  ( DO-ON-UNSTACK0 ?BLOCK0 ?BLOCK2 ) ( ACHIEVE-ONTABLE0 ?BLOCK0 ) )
)
( :task ACHIEVE-ONTABLE
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-ONTABLE
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition (and ( ONTABLE ?BLOCK0 ))
	:task  ( ACHIEVE-ONTABLE ?BLOCK0 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-ONTABLE
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition ( NOT ( ONTABLE ?BLOCK0 ))
	:task  ( ACHIEVE-ONTABLE ?BLOCK0 )
	:subtasks  ( ACHIEVE-ONTABLE0 ?BLOCK0 )
)
( :task ACHIEVE-ONTABLE0
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-ONTABLE0
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition  ( ONTABLE ?BLOCK0 )
	:task ( ACHIEVE-ONTABLE0 ?BLOCK0 )
	:subtasks ( )
)
( :task ACHIEVE-CLEAR
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-CLEAR
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition (and ( CLEAR ?BLOCK0 ))
	:task  ( ACHIEVE-CLEAR ?BLOCK0 )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-CLEAR
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition ( NOT ( CLEAR ?BLOCK0 ))
	:task  ( ACHIEVE-CLEAR ?BLOCK0 )
	:subtasks  ( ACHIEVE-CLEAR1 ?BLOCK0 )
)
( :task ACHIEVE-CLEAR1
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-CLEAR1
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition  ( CLEAR ?BLOCK0 )
	:task ( ACHIEVE-CLEAR1 ?BLOCK0 )
	:subtasks ( )
)
    ( :DALO ( ACHIEVE-CLEAR1 ?BLOCK0 )
              ( ( NOT ( CLEAR ?BLOCK0 ) ) ( ON ?BLOCK1 ?BLOCK0 ) ( BLOCK ?BLOCK1 ) ( BLOCK ?BLOCK0 ) )
              ( ( DO-ON-UNSTACK1 ?BLOCK1 ?BLOCK0 ) ( ACHIEVE-CLEAR1 ?BLOCK0 ) )
    )
    ( :DALO ( ACHIEVE-CLEAR1 ?BLOCK0 )
              ( ( NOT ( CLEAR ?BLOCK0 ) ) ( HOLDING ?BLOCK0 ) ( BLOCK ?BLOCK0 ) )
              ( ( !PUT-DOWN ?BLOCK0 ) ( ACHIEVE-CLEAR1 ?BLOCK0 ) )
    )
( :method M-ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK ?BLOCK3 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( CLEAR ?BLOCK1 ) )
	:ordered-subtasks (and  ( DO-CLEAR-STACK1 ?BLOCK3 ?BLOCK1 ) ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( CLEAR ?BLOCK1 ) ( ONTABLE ?BLOCK1 ) )
	:ordered-subtasks (and  ( DO-CLEAR-PICK-UP1 ?BLOCK1 ) ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK ?BLOCK4 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( CLEAR ?BLOCK1 ) )
	:ordered-subtasks (and  ( DO-CLEAR-UNSTACK1 ?BLOCK1 ?BLOCK4 ) ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ON
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:precondition ( NOT ( ON ?BLOCK0 ?BLOCK1 ))
	:task  ( ACHIEVE-ON ?BLOCK0 ?BLOCK1 )
	:subtasks  ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 )
)
( :task ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
)
( :method M-ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK )
	:precondition  ( ON ?BLOCK0 ?BLOCK1 )
	:task ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 )
	:subtasks ( )
)
( :method M-ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK ?BLOCK2 - BLOCK)
	:task  ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 )
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( ON ?BLOCK2 ?BLOCK1 ) )
	:ordered-subtasks (and  ( DO-ON-UNSTACK1 ?BLOCK2 ?BLOCK1 ) ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-ON1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task 
	:precondition (and ( NOT ( ON ?BLOCK0 ?BLOCK1 ) ) ( HOLDING ?BLOCK1 ) )
	:ordered-subtasks (and  ( !PUT-DOWN ?BLOCK1 ) ( ACHIEVE-ON1 ?BLOCK0 ?BLOCK1 ) )
)
( :method M-ACHIEVE-HOLDING1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK2 - BLOCK)
	:task 
	:precondition (and ( NOT ( HOLDING ?BLOCK0 ) ) ( CLEAR ?BLOCK0 ) )
	:ordered-subtasks (and  ( DO-CLEAR-STACK1 ?BLOCK2 ?BLOCK0 ) ( ACHIEVE-HOLDING1 ?BLOCK0 ) )
)
    ( :DALO ( ACHIEVE-HOLDING1 ?BLOCK0 )
              ( ( NOT ( HOLDING ?BLOCK0 ) ) ( CLEAR ?BLOCK0 ) ( ONTABLE ?BLOCK0 ) ( BLOCK ?BLOCK0 ) )
              ( ( DO-CLEAR-PICK-UP1 ?BLOCK0 ) ( ACHIEVE-HOLDING1 ?BLOCK0 ) )
    )
    ( :DALO ( ACHIEVE-HOLDING1 ?BLOCK0 )
              ( ( NOT ( HOLDING ?BLOCK0 ) ) ( CLEAR ?BLOCK0 ) ( BLOCK ?BLOCK0 ) ( BLOCK ?BLOCK3 ) )
              ( ( DO-CLEAR-UNSTACK1 ?BLOCK0 ?BLOCK3 ) ( ACHIEVE-HOLDING1 ?BLOCK0 ) )
    )
( :method M-ACHIEVE-HOLDING1
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task 
	:precondition (and ( NOT ( HOLDING ?BLOCK0 ) ) ( ON ?BLOCK1 ?BLOCK0 ) )
	:ordered-subtasks (and  ( DO-ON-UNSTACK1 ?BLOCK1 ?BLOCK0 ) ( ACHIEVE-HOLDING1 ?BLOCK0 ) )
)
( :method M-ACHIEVE-HOLDING
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition ( NOT ( HOLDING ?BLOCK0 ))
	:task  ( ACHIEVE-HOLDING ?BLOCK0 )
	:subtasks  ( ACHIEVE-HOLDING1 ?BLOCK0 )
)
( :task ACHIEVE-HOLDING1
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-HOLDING1
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition  ( HOLDING ?BLOCK0 )
	:task ( ACHIEVE-HOLDING1 ?BLOCK0 )
	:subtasks ( )
)
( :task ACHIEVE-HANDEMPTY
	:parameters ( )
)
( :method M-ACHIEVE-HANDEMPTY
	:parameters ( )
	:precondition (and ( HANDEMPTY ))
	:task  ( ACHIEVE-HANDEMPTY )
	:ordered-subtasks ( )
)
( :method M-ACHIEVE-HANDEMPTY
	:parameters ( )
	:precondition ( NOT ( HANDEMPTY ))
	:task  ( ACHIEVE-HANDEMPTY )
	:subtasks  ( ACHIEVE-HANDEMPTY2 )
)
( :task ACHIEVE-HANDEMPTY2
	:parameters ( )
)
( :method M-ACHIEVE-HANDEMPTY2
	:parameters ( )
	:precondition  ( HANDEMPTY )
	:task ( ACHIEVE-HANDEMPTY2 )
	:subtasks ( )
)
    ( :DALO ( ACHIEVE-HANDEMPTY2 )
              ( ( NOT ( HANDEMPTY ) ) ( HOLDING ?BLOCK0 ) ( BLOCK ?BLOCK0 ) )
              ( ( !PUT-DOWN ?BLOCK0 ) ( ACHIEVE-HANDEMPTY2 ) )
    )
( :method M-ACHIEVE-HOLDING2
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task 
	:precondition (and ( NOT ( HOLDING ?BLOCK0 ) ) ( HANDEMPTY ) ( CLEAR ?BLOCK1 ) ( ONTABLE ?BLOCK1 ) )
	:ordered-subtasks (and  ( !PICK-UP ?BLOCK1 ) ( ACHIEVE-HOLDING2 ?BLOCK0 ) )
)
( :method M-ACHIEVE-HOLDING2
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK ?BLOCK2 - BLOCK)
	:task 
	:precondition (and ( NOT ( HOLDING ?BLOCK0 ) ) ( HANDEMPTY ) ( ON ?BLOCK1 ?BLOCK2 ) ( CLEAR ?BLOCK1 ) )
	:ordered-subtasks (and  ( !UNSTACK ?BLOCK1 ?BLOCK2 ) ( ACHIEVE-HOLDING2 ?BLOCK0 ) )
)
( :method M-ACHIEVE-HOLDING
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition ( NOT ( HOLDING ?BLOCK0 ))
	:task  ( ACHIEVE-HOLDING ?BLOCK0 )
	:subtasks  ( ACHIEVE-HOLDING2 ?BLOCK0 )
)
( :task ACHIEVE-HOLDING2
	:parameters ( ?BLOCK0 - BLOCK )
)
( :method M-ACHIEVE-HOLDING2
	:parameters ( ?BLOCK0 - BLOCK )
	:precondition  ( HOLDING ?BLOCK0 )
	:task ( ACHIEVE-HOLDING2 ?BLOCK0 )
	:subtasks ( )
)
( :method M-ACHIEVE-HOLDING2
	:parameters ( ?BLOCK0 - BLOCK ?BLOCK1 - BLOCK)
	:task  ( ACHIEVE-HOLDING2 ?BLOCK0 )
	:precondition (and ( NOT ( HOLDING ?BLOCK0 ) ) ( HOLDING ?BLOCK1 ) )
	:ordered-subtasks (and  ( !PUT-DOWN ?BLOCK1 ) ( ACHIEVE-HOLDING2 ?BLOCK0 ) )
)
))
