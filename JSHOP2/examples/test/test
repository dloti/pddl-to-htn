(defdomain test
  (
    (:operator (!op0 ?y ?r ?w)
               (:sort-by ?w > ((not (a ?y)) (t ?w)))
               (?r)
               ((forall (?x) ((q ?x ?y) (r ?x ?z)) ((s ?z))))
    )

    (:operator (!op1 ?x ?y ?z ?t)
               (:sort-by ?t MyComparator ((or (q ?z ?t) (r ?z ?t)) (s ?t)))
               nil
               nil
    )

    (:operator (!op2 ?x ?w)
               ((call < ?w (call + 1.01 2) 3.5 4))
               nil
               nil
               (call ^ 2 ?w)
    )

    (:method (m1 ?r)
      (:first (v ?x))
      ((m3 ?x))
    )

    (:method (m1 (?y . ?r))
      ((ax2 ?x) (b ?x ?y ?z))
      ((!op0 1 (obj2) ?w))

      ((a ?x) ((or (b ?x ?y ?z) (c ?x ?y ?z)) (call <= 2 2.5 2.5 3.1))
       (not (and (call Member ?y (obj2 obj3 obj4)) (call < 2 1)))
       (call Member (a b c) ((a b c) d e))
       (call Member (call * 2 2) (2 3 (call + 1 3) 5))
       (imply (a obj1) (v ?v)))
      ((!op0 ?v ?r ?w) (!op1 ?x ?y ?z ?t) (m2))
    )

    (:method (m2)
      ((ax1 obj2 ?x ?u (call * 1.5 2 2)) (not (ttt uuu))
       (assign ?y (12 (call / 12 6 5) (?x . (a b . c))))
       (assign ?z (www (call + 29 -125e-1 (call ^ 2 2 3) ?u (call - 2 12 5)))))
      ((!op2 (?y . ?z) (call + 1 (call MyFunc 1 1)))))

    (:method (m3 ?x)
      (a ?x)
      ((!op4))

      nil
      nil)

    (:- (ax1 ?a (?b yyy ?d) (call + 1 1) (call ^ 6 1))
        (c ?a ?b ?d)
        (ax1 ?b (?a yyy ?d) 2 (call + 3 (call * 1.5 2)))
    )

    (:- (ax2 ?a)
        (q ?a ?b)
        (a ?a)
    )
  )
)
